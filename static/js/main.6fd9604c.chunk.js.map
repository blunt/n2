{"version":3,"sources":["services/ApiData.js","history.js","components/Loading.js","services/Utilities.js","components/Button.js","components/ListItem.js","components/List.js","components/Search.js","components/PageHeader.js","components/Nav.js","components/DetailItem.js","components/PeopleItem.js","pages/Title.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["searchEndpoint","apiKey","apiHost","apiConfig","headers","X-RapidAPI-Host","X-RapidAPI-Key","params","countryid","getNew","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","activeCountry","allContent","content","wrap","_context","prev","next","axios","get","q","p","t","st","sent","sessionStorage","setItem","JSON","stringify","data","ITEMS","abrupt","stop","_x","apply","this","arguments","getCountries","_ref2","_callee2","_context2","getResults","_ref3","_callee3","keyword","genres","_context3","cl","ob","sa","_x2","_x3","_x4","getGenres","_ref4","_callee4","_context4","localStorage","getTitle","_ref5","_callee5","id","_context5","RESULT","_x5","createBrowserHistory","Loading","react_default","createElement","className","netflixUrl","trim","s","n","indexOf","substring","length","Button","props","buttonStyle","transition","classes","type","linkType","to","link","style","onClick","handleTitle","data-id","dataId","label","href","target","rel","ListItem","item_url","item","netflixid","listClasses","index","key","loading","src","image","alt","title","dangerouslySetInnerHTML","__html","synopsis","components_Button","rating","runtime","released","List","children","page","react_router_dom","map","components_ListItem","Search","value","placeholder","onChange","e","keywordChange","onKeyDown","handleKeyDown","PageHeader","components_Search","setKeyword","Nav","_useState","useState","_useState2","slicedToArray","setGenres","_useState3","_useState4","countries","setCountries","_useState5","_useState6","setLoading","_useState7","_useState8","filteredGenres","setFilteredGenres","_useState9","_useState10","finalGenres","setFinalGenres","_useState11","_useState12","useEffect","getItem","then","_unused","parse","document","querySelector","selected","_unused2","filter","genre","keys","toLowerCase","includes","handleHome","handleCountryChange","defaultValue","number_id","values","name","genreTitle","genreIds","join","checked","isActive","handleInputChange","DetailItem","PeopleItem","Title","setContent","components_Loading","nfinfo","image1","imdbinfo","components_DetailItem","people","undefined","director","components_PeopleItem","creator","actor","plot","replace","withRouter","newContent","setNewContent","setActiveCountry","activeCountryNumber","setActiveCountryNumber","searching","setSearching","_useState13","_useState14","activeGenres","setActiveGenres","_useState15","_useState16","_useState17","_useState18","isTitle","setIsTitle","_useState19","_useState20","setTitle","getHomeContent","getSearchResults","event","titleId","getAttribute","history","push","window","onpopstate","path","location","pathname","newTitle","Number","hash","removeGenre","otherValue","newGenres","newActiveGenres","checkbox","querySelectorAll","components_Nav","count","concat","toConsumableArray","obj","options","selectedIndex","defaultCountry","components_PageHeader","home","pages_Title","components_List","activeGenre","i","App","basename","react_router","exact","component","Home","Boolean","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6QAIIA,EAA4B,kDAC5BC,EAAS,qDACTC,EAAU,gCAERC,EAAY,CACdC,QAAS,CACLC,kBAAmBH,EACnBI,iBAAkBL,GAEtBM,OAAQ,CAEJC,UAAa,QAKfC,EAAM,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,EAAOC,GAAP,IAAAC,EAAAC,EAAA,OAAAN,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACcC,IAAMC,IAAIzB,EAAgB,CAC/CI,QAAS,CACLC,kBAAmBH,EACnBI,iBAAkBL,GAEtBM,OAAQ,CACJmB,EAAK,YAAcT,EACnBU,EAAK,IACLC,EAAK,KACLC,GAAM,SAVH,cACLX,EADKG,EAAAS,KAaXC,eAAeC,QAAQ,aAAef,EAAegB,KAAKC,UAAUhB,EAAWiB,KAAKC,QAC9EjB,EAAUD,EAAWiB,KAAKC,MAdrBf,EAAAgB,OAAA,SAeJlB,GAfI,wBAAAE,EAAAiB,SAAAtB,MAAH,gBAAAuB,GAAA,OAAA7B,EAAA8B,MAAAC,KAAAC,YAAA,GAkBNC,EAAY,eAAAC,EAAAjC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAA8B,IAAA,IAAA3B,EAAAC,EAAA,OAAAN,EAAAC,EAAAM,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAAAuB,EAAAvB,KAAA,EACQC,IAAMC,IAAIzB,EAAgB,CAC/CI,QAAS,CACLC,kBAAmBH,EACnBI,iBAAkBL,GAEtBM,OAAQ,CACJqB,EAAK,KACLF,EAAK,eARI,cACXR,EADW4B,EAAAhB,KAWjBC,eAAeC,QAAQ,YAAaC,KAAKC,UAAUhB,EAAWiB,KAAKC,QAC7DjB,EAAUD,EAAWiB,KAAKC,MAZfU,EAAAT,OAAA,SAaVlB,GAbU,wBAAA2B,EAAAR,SAAAO,MAAH,yBAAAD,EAAAJ,MAAAC,KAAAC,YAAA,GAgBZK,EAAU,eAAAC,EAAArC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAkC,EAAOC,EAASC,EAAQlC,GAAxB,IAAAC,EAAAC,EAAA,OAAAN,EAAAC,EAAAM,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,cAAA6B,EAAA7B,KAAA,EACUC,IAAMC,IAAIzB,EAAgB,CAC/CI,QAAS,CACLC,kBAAmBH,EACnBI,iBAAkBL,GAEtBM,OAAQ,CACJmB,EAAKwB,EAAU,2BAA6BC,EAAS,yCACrDvB,EAAK,KACLyB,GAAMpC,EACNY,GAAM,MACNyB,GAAM,YACN3B,EAAK,IACL4B,GAAM,SAbC,cACTrC,EADSkC,EAAAtB,KAgBTX,EAAUD,EAAWiB,KAAKC,MAhBjBgB,EAAAf,OAAA,SAiBRlB,GAjBQ,wBAAAiC,EAAAd,SAAAW,MAAH,gBAAAO,EAAAC,EAAAC,GAAA,OAAAV,EAAAR,MAAAC,KAAAC,YAAA,GAoBViB,EAAS,eAAAC,EAAAjD,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAA8C,IAAA,IAAA3C,EAAAC,EAAA,OAAAN,EAAAC,EAAAM,KAAA,SAAA0C,GAAA,cAAAA,EAAAxC,KAAAwC,EAAAvC,MAAA,cAAAuC,EAAAvC,KAAA,EACWC,IAAMC,IAxEH,yDAwEuBtB,GADrC,cACRe,EADQ4C,EAAAhC,KAEdiC,aAAa/B,QAAQ,SAAUC,KAAKC,UAAUhB,EAAWiB,KAAKC,QACxDjB,EAAUD,EAAWiB,KAAKC,MAHlB0B,EAAAzB,OAAA,SAIPlB,GAJO,wBAAA2C,EAAAxB,SAAAuB,MAAH,yBAAAD,EAAApB,MAAAC,KAAAC,YAAA,GAQTsB,EAAQ,eAAAC,EAAAtD,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAmD,EAAOC,GAAP,IAAAjD,EAAAC,EAAA,OAAAN,EAAAC,EAAAM,KAAA,SAAAgD,GAAA,cAAAA,EAAA9C,KAAA8C,EAAA7C,MAAA,cAAA6C,EAAA7C,KAAA,EACYC,IAAMC,IAAIzB,EAAgB,CAC/CI,QAAS,CACLC,kBAAmBH,EACnBI,iBAAkBL,GAEtBM,OAAQ,CACJqB,EAAK,YACLF,EAAKyC,KARA,cACPjD,EADOkD,EAAAtC,KAWPX,EAAUD,EAAWiB,KAAKkC,OAXnBD,EAAA/B,OAAA,SAYNlB,GAZM,wBAAAiD,EAAA9B,SAAA4B,MAAH,gBAAAI,GAAA,OAAAL,EAAAzB,MAAAC,KAAAC,YAAA,UChFC6B,gBCMAC,EANC,WACZ,OACIC,EAAA3D,EAAA4D,cAAA,OAAKC,UAAW,kDCWlBC,EAAa,SAACT,GAChB,MAAO,iCAAmCA,GAOxCU,EAAO,SAACC,GACV,IAAMC,EAAID,EAAEE,QAAQ,KAEpB,OADAF,EAAIA,EAAEG,UAAU,GAAU,IAAPF,EAAWA,EAAID,EAAEI,SCkBzBC,EAzCA,SAACC,GAEZ,IAAMC,EAAc,CAChBC,WAAY,mBAGZC,EAAU,iFAQd,MANmB,cAAfH,EAAMI,KACND,GAAW,wCAEXA,GAAW,sEAIQ,SAAnBH,EAAMK,SACEhB,EAAA3D,EAAA4D,cAAA,OACIgB,GAAIN,EAAMO,KACVhB,UAAWY,EACXK,MAAOP,EACPQ,QAAST,EAAMU,YACfC,UAASX,EAAMY,QAEdZ,EAAMa,OAIXxB,EAAA3D,EAAA4D,cAAA,KACIwB,KAAMd,EAAMO,KACZhB,UAAWY,EACXK,MAAOP,EACPc,OAAQ,SACRC,IAAK,cAEJhB,EAAMa,QC0CZI,EAzEE,SAACjB,GAEd,IAAMkB,EAAW,UAAYlB,EAAMmB,KAAKC,UAEpCC,EAAc,qBAQlB,OANIrB,EAAMsB,QAAUtB,EAAMF,OACtBuB,GAAe,wBAEfA,GAAe,gBAIfhC,EAAA3D,EAAA4D,cAAA,WACIiC,IAAKvB,EAAMmB,KAAKC,UAChB7B,UAAW8B,GAEXhC,EAAA3D,EAAA4D,cAAA,UAAQC,UAAW,SACfF,EAAA3D,EAAA4D,cAAA,OAAKmB,QAAST,EAAMU,aAChBrB,EAAA3D,EAAA4D,cAAA,OACIkC,QAAS,OACTb,UAASX,EAAMmB,KAAKC,UACpB7B,UAAW,uCACXkC,IAAKzB,EAAMmB,KAAKO,MAAOC,IAAK3B,EAAMmB,KAAKS,UAInDvC,EAAA3D,EAAA4D,cAAA,cAAYC,UAAW,4BACnBF,EAAA3D,EAAA4D,cAAA,OAAKmB,QAAST,EAAMU,aAChBrB,EAAA3D,EAAA4D,cAAA,MACIqB,UAASX,EAAMmB,KAAKC,UACpB7B,UAAW,wGACXsC,wBAAyB,CAACC,OAAQ9B,EAAMmB,KAAKS,UAGrDvC,EAAA3D,EAAA4D,cAAA,OAAKC,UAAW,kBACZF,EAAA3D,EAAA4D,cAAA,OAAKC,UAAW,sBACZF,EAAA3D,EAAA4D,cAAA,KACIC,UAAW,2CACXsC,wBAAyB,CAACC,OAAQrC,EAAKO,EAAMmB,KAAKY,aAEtD1C,EAAA3D,EAAA4D,cAAA,OAAKC,UAAW,WACZF,EAAA3D,EAAA4D,cAAC0C,EAAD,CACIzB,KAAMf,EAAWQ,EAAMmB,KAAKC,WAC5BP,MAAO,SAAWb,EAAMmB,KAAKf,OAEjCf,EAAA3D,EAAA4D,cAAC0C,EAAD,CACI5B,KAAM,YACNC,SAAU,OACVE,KAAMW,EACNL,MAAO,aACPH,YAAaV,EAAMU,YACnBE,OAAQZ,EAAMmB,KAAKC,cAI/B/B,EAAA3D,EAAA4D,cAAA,OAAKC,UAAW,kDACXS,EAAMmB,KAAKc,OAAS,GACjB5C,EAAA3D,EAAA4D,cAAA,SAAIU,EAAMmB,KAAKc,QAElBjC,EAAMmB,KAAKe,SACR7C,EAAA3D,EAAA4D,cAAA,SAAIU,EAAMmB,KAAKe,SAElBlC,EAAMmB,KAAKgB,UACR9C,EAAA3D,EAAA4D,cAAA,SAAIU,EAAMmB,KAAKgB,eC/B5BC,EAjCF,SAACpC,GACV,OACIX,EAAA3D,EAAA4D,cAAA,WAASC,UAAW,SAChBF,EAAA3D,EAAA4D,cAAA,UAAQC,UAAW,8EACfF,EAAA3D,EAAA4D,cAAA,OAAKC,UAAW,qBACZF,EAAA3D,EAAA4D,cAAA,UAAKU,EAAM4B,OACV5B,EAAMqC,SACNrC,EAAMsC,MACHjD,EAAA3D,EAAA4D,cAACiD,EAAA,EAAD,CACIhD,UAAW,yDACXe,GAAIN,EAAMsC,MAFd,cASZjD,EAAA3D,EAAA4D,cAAA,eACKU,EAAMjE,QAAQyG,IAAI,SAACrB,EAAMG,GAAP,OACXjC,EAAA3D,EAAA4D,cAACmD,EAAD,CACI3C,OAAQE,EAAMjE,QAAQ+D,OACtBwB,MAAOA,EAAQ,EACfC,IAAKJ,EAAKC,UACVD,KAAMA,EACNT,YAAaV,EAAMU,mBCdhCgC,EAbA,SAAC1C,GACZ,OACIX,EAAA3D,EAAA4D,cAAA,SACIC,UAAW,uFACXa,KAAM,OACNuC,MAAO3C,EAAMlC,QACb8E,YAAa,yBACbC,SAAU,SAAAC,GAAC,OAAI9C,EAAM+C,cAAcD,EAAE/B,OAAO4B,QAC5CK,UAAWhD,EAAMiD,iBCGdC,EAVI,SAAClD,GAChB,OACIX,EAAA3D,EAAA4D,cAAC6D,EAAD,CACIrF,QAASkC,EAAMlC,QACfiF,cAAe/C,EAAMoD,WACrBH,cAAejD,EAAMiD,iBCqIlBI,EA1IH,SAACrD,GAAU,IAAAsD,EAESC,mBAAS,IAFlBC,EAAAjI,OAAAkI,EAAA,EAAAlI,CAAA+H,EAAA,GAEZvF,EAFYyF,EAAA,GAEJE,EAFIF,EAAA,GAAAG,EAGeJ,mBAAS,IAHxBK,EAAArI,OAAAkI,EAAA,EAAAlI,CAAAoI,EAAA,GAGZE,EAHYD,EAAA,GAGDE,EAHCF,EAAA,GAAAG,EAIWR,oBAAS,GAJpBS,EAAAzI,OAAAkI,EAAA,EAAAlI,CAAAwI,EAAA,GAIZvC,EAJYwC,EAAA,GAIHC,EAJGD,EAAA,GAAAE,EAKyBX,mBAAS,IALlCY,EAAA5I,OAAAkI,EAAA,EAAAlI,CAAA2I,EAAA,GAKZE,EALYD,EAAA,GAKIE,EALJF,EAAA,GAAAG,EAMmBf,mBAAS,IAN5BgB,EAAAhJ,OAAAkI,EAAA,EAAAlI,CAAA+I,EAAA,GAMZE,EANYD,EAAA,GAMCE,EANDF,EAAA,GAAAG,EAOWnB,mBAAS,IAPpBoB,EAAApJ,OAAAkI,EAAA,EAAAlI,CAAAmJ,EAAA,GAOZ5G,EAPY6G,EAAA,GAOHvB,EAPGuB,EAAA,GA2DnB,OAlDAC,oBAAU,WACiC,OAAnCjG,aAAakG,QAAQ,UACrBtG,IAAYuG,KAAK,SAAC/I,GACd,IACI2H,EAAU3H,GACVkI,GAAW,GACb,MAAAc,QAKNrB,EAAU7G,KAAKmI,MAAMrG,aAAakG,QAAQ,WAAa,OACvDZ,GAAW,IAG2B,OAAtCtF,aAAakG,QAAQ,aACrBtH,IAAeuH,KAAK,SAAC/I,GACjB,IACI+H,EAAa/H,GACbkJ,SAASC,cAAc,2BAA2BC,UAAW,EAC7DlB,GAAW,GACb,MAAAmB,QAKNtB,EAAajH,KAAKmI,MAAMrG,aAAakG,QAAQ,cAAgB,OAC7DZ,GAAW,KAEhB,IAEHW,oBAAW,WACP,GAAgB,KAAZ9G,EAAgB,CAChB,IAAMsG,EAAiBrG,EAAOsH,OAAO,SAAAC,GAAK,OACtCzI,KAAKC,UAAUvB,OAAOgK,KAAKD,IAAQE,cAAcC,SAAS3H,KAE9DuG,EAAkBD,QAElBC,EAAkB,KAEvB,CAACvG,EAASC,IAEb6G,oBAAW,WACHR,EAAetE,OAAS,EACxB2E,EAAeL,GAEfK,EAAe1G,IAEpB,CAACqG,EAAgBrG,IAGhBsB,EAAA3D,EAAA4D,cAAA,UAAQC,UAAW,8DACfF,EAAA3D,EAAA4D,cAAA,WACID,EAAA3D,EAAA4D,cAAA,MAAIC,UAAW,WACXF,EAAA3D,EAAA4D,cAAA,OACImB,QAAST,EAAM0F,WACfnG,UAAW,8EAFf,UAOJF,EAAA3D,EAAA4D,cAAA,MAAIC,UAAW,wCAAf,2DAEJF,EAAA3D,EAAA4D,cAAA,OAAKC,UAAW,SACViC,GACEnC,EAAA3D,EAAA4D,cAAA,UACIC,UAAW,sGACXsD,SAAU7C,EAAM2F,oBAChBC,aAAc,KACd7G,GAAI,aAEH8E,EAAUrB,IAAI,SAACrB,GACZ,IAAM0E,EAAYtK,OAAOuK,OAAO3E,GAAM,GAChCpC,EAAKxD,OAAOuK,OAAO3E,GAAM,GACzB4E,EAAOxK,OAAOuK,OAAO3E,GAAM,GACjC,OACI9B,EAAA3D,EAAA4D,cAAA,UACIqD,MAAO5D,EACPwC,IAAKsE,EACLlF,UAASkF,GAERE,OAQzB1G,EAAA3D,EAAA4D,cAAA,SACIC,UAAW,kDACXa,KAAM,OACNuC,MAAO7E,EACP8E,YAAa,gBACbC,SAAU,SAAAC,GAAC,OAAIM,EAAWN,EAAE/B,OAAO4B,UAEvCtD,EAAA3D,EAAA4D,cAAA,OACIP,GAAI,SACJQ,UAAW,wEAEXF,EAAA3D,EAAA4D,cAAA,OAAKC,UAAW,kEACViC,GACEgD,EAAYhC,IAAI,SAACrB,GACb,IAAM6E,EAAazK,OAAOgK,KAAKpE,GAAM,GAC/B8E,EAAW1K,OAAOuK,OAAO3E,GAAM,GAAG+E,OACxC,OACI7G,EAAA3D,EAAA4D,cAAA,SACIiC,IAAKyE,EACLzG,UAAW,gDAEXF,EAAA3D,EAAA4D,cAAA,SACIC,UAAW,iBACXwG,KAAMC,EACN5F,KAAM,WACN+F,QAASnG,EAAMoG,SACfvD,SAAU7C,EAAMqG,kBAChB1D,MAAOsD,IAEX5G,EAAA3D,EAAA4D,cAAA,QAAMC,UAAW,SAAUyG,UCvHhDM,EATI,SAACtG,GAChB,OACIX,EAAA3D,EAAA4D,cAAA,OAAKC,UAAW,SACZF,EAAA3D,EAAA4D,cAAA,QAAMC,UAAW,yBAA0BS,EAAMa,OACjDxB,EAAA3D,EAAA4D,cAAA,SAAIU,EAAMmB,QCSPoF,EAbI,SAACvG,GAChB,OACIX,EAAA3D,EAAA4D,cAAA,OAAKC,UAAW,0DACZF,EAAA3D,EAAA4D,cAAA,QAAMC,UAAW,iBAAkBS,EAAMa,OACzCxB,EAAA3D,EAAA4D,cAAA,OAAKC,UAAW,sBACZF,EAAA3D,EAAA4D,cAAA,MAAIC,UAAW,kBACVS,EAAMqC,aCyHZmE,EAzHD,SAACxG,GAAU,ITWL4B,ESXK0B,EAESC,mBAAS,IAFlBC,EAAAjI,OAAAkI,EAAA,EAAAlI,CAAA+H,EAAA,GAEdvH,EAFcyH,EAAA,GAELiD,EAFKjD,EAAA,GAAAG,EAGSJ,oBAAS,GAHlBK,EAAArI,OAAAkI,EAAA,EAAAlI,CAAAoI,EAAA,GAGdnC,EAHcoC,EAAA,GAGLK,EAHKL,EAAA,GAgBrB,OAXAgB,oBAAU,WACNhG,EAASoB,EAAMjB,IAAI+F,KAAK,SAAC/I,GACrB,IACI0K,EAAW1K,GACXkI,GAAW,GACb,MAAAc,QAIP,CAAC/E,EAAMjB,KAGNyC,EACInC,EAAA3D,EAAA4D,cAACoH,EAAD,MAEArH,EAAA3D,EAAA4D,cAAA,eACID,EAAA3D,EAAA4D,cAAA,OAAKC,UAAW,sCACZF,EAAA3D,EAAA4D,cAAA,UAAQC,UAAW,SACfF,EAAA3D,EAAA4D,cAAA,OACIkC,QAAS,OACTjC,UAAW,wBACXkC,IAAK1F,EAAQ4K,OAAOC,OACpBjF,IAAK5F,EAAQ4K,OAAO/E,SAG5BvC,EAAA3D,EAAA4D,cAAA,WAASC,UAAW,4BAChBF,EAAA3D,EAAA4D,cAAA,WACID,EAAA3D,EAAA4D,cAAA,MAAIC,UAAW,iBAAkBxD,EAAQ4K,OAAO/E,OAChDvC,EAAA3D,EAAA4D,cAAA,WAASC,UAAW,oDACfxD,EAAQ8K,SAAS5E,QACdlG,EAAQ8K,SAAS5E,OAAS,GACtB5C,EAAA3D,EAAA4D,cAACwH,EAAD,CAAYjG,MAAO,cAAeM,KAAMpF,EAAQ8K,SAAS5E,SAEhElG,EAAQ8K,SAAS3E,SACd7C,EAAA3D,EAAA4D,cAACwH,EAAD,CAAYjG,MAAO,WAAYM,KAAMpF,EAAQ8K,SAAS3E,UAEzDnG,EAAQ4K,OAAOxE,UACZ9C,EAAA3D,EAAA4D,cAACwH,EAAD,CAAYjG,MAAO,gBAAiBM,KAAMpF,EAAQ4K,OAAOxE,YAGjE9C,EAAA3D,EAAA4D,cAAA,KACIuC,wBAAyB,CAACC,OAAQrC,EAAK1D,EAAQ4K,OAAO5E,cAG9D1C,EAAA3D,EAAA4D,cAAA,OAAKC,UAAW,WACZF,EAAA3D,EAAA4D,cAAC0C,EAAD,CACIzB,KAAMf,EAAWzD,EAAQ4K,OAAOvF,WAChCP,MAAO,SAAW9E,EAAQ4K,OAAOvG,OAErCf,EAAA3D,EAAA4D,cAAC0C,EAAD,CACI5B,KAAM,YACNG,MT7CZqB,ES6C6B7F,EAAQ4K,OAAO/E,MT5CrD,gDAAkDA,EAAQ,qBS6CrCf,MAAO,qBAKvBxB,EAAA3D,EAAA4D,cAAA,WAASC,UAAW,4BACfxD,EAAQgL,OAAOvE,IAAI,SAACrB,GACjB,YACsB6F,IAAlB7F,EAAK8F,UACD9F,EAAK8F,SAASnH,OAAS,GACnBT,EAAA3D,EAAA4D,cAAC4H,EAAD,CAAY3F,IAAKJ,EAAK8F,SAAUpG,MAAO,YAClCM,EAAK8F,SAASzE,IAAI,SAACrB,GAChB,OACI9B,EAAA3D,EAAA4D,cAAA,MAAIiC,IAAKJ,EAAM5B,UAAW,cAAe4B,QAQpEpF,EAAQgL,OAAOvE,IAAI,SAACrB,GACjB,YACqB6F,IAAjB7F,EAAKgG,SACDhG,EAAKgG,QAAQrH,OAAS,GAClBT,EAAA3D,EAAA4D,cAAC4H,EAAD,CAAY3F,IAAKJ,EAAKgG,QAAStG,MAAO,cACjCM,EAAKgG,QAAQ3E,IAAI,SAACrB,GACf,OACI9B,EAAA3D,EAAA4D,cAAA,MAAIiC,IAAKJ,EAAM5B,UAAW,cAAe4B,QAQpEpF,EAAQgL,OAAOvE,IAAI,SAACrB,GACjB,YACmB6F,IAAf7F,EAAKiG,OACDjG,EAAKiG,MAAMtH,OAAS,GAChBT,EAAA3D,EAAA4D,cAAC4H,EAAD,CAAY3F,IAAKJ,EAAKiG,MAAOvG,MAAO,YAC/BM,EAAKiG,MAAM5E,IAAI,SAACrB,GACb,OACI9B,EAAA3D,EAAA4D,cAAA,MAAIiC,IAAKJ,EAAM5B,UAAW,cAAe4B,SASzE9B,EAAA3D,EAAA4D,cAAA,WAASC,UAAW,cACfxD,EAAQ8K,SAASQ,MACdhI,EAAA3D,EAAA4D,cAAA,KACIuC,wBAAyB,CAACC,OAAQ/F,EAAQ8K,SAASQ,KAAKC,QAAQ,OAAO,UCwGpFC,cArNF,SAACvH,GAAU,IAAAsD,EAEgBC,mBAAS,IAFzBC,EAAAjI,OAAAkI,EAAA,EAAAlI,CAAA+H,EAAA,GAEbkE,EAFahE,EAAA,GAEDiE,EAFCjE,EAAA,GAAAG,EAGsBJ,mBAAS,MAH/BK,EAAArI,OAAAkI,EAAA,EAAAlI,CAAAoI,EAAA,GAGb9H,EAHa+H,EAAA,GAGE8D,EAHF9D,EAAA,GAAAG,EAIkCR,mBAAS,MAJ3CS,EAAAzI,OAAAkI,EAAA,EAAAlI,CAAAwI,EAAA,GAIb4D,EAJa3D,EAAA,GAIQ4D,EAJR5D,EAAA,GAAAE,EAKUX,oBAAS,GALnBY,EAAA5I,OAAAkI,EAAA,EAAAlI,CAAA2I,EAAA,GAKb1C,EALa2C,EAAA,GAKJF,EALIE,EAAA,GAAAG,EAMcf,oBAAS,GANvBgB,EAAAhJ,OAAAkI,EAAA,EAAAlI,CAAA+I,EAAA,GAMbuD,EANatD,EAAA,GAMFuD,EANEvD,EAAA,GAAAG,EAOQnB,mBAAS,IAPjBoB,EAAApJ,OAAAkI,EAAA,EAAAlI,CAAAmJ,EAAA,GAOb3G,EAPa4G,EAAA,GAOLjB,EAPKiB,EAAA,GAAAoD,EAQoBxE,mBAAS,IAR7ByE,EAAAzM,OAAAkI,EAAA,EAAAlI,CAAAwM,EAAA,GAQbE,EARaD,EAAA,GAQCE,EARDF,EAAA,GAAAG,EASU5E,mBAAS,IATnB6E,EAAA7M,OAAAkI,EAAA,EAAAlI,CAAA4M,EAAA,GASbrK,EATasK,EAAA,GASJhF,EATIgF,EAAA,GAAAC,EAUU9E,oBAAS,GAVnB+E,EAAA/M,OAAAkI,EAAA,EAAAlI,CAAA8M,EAAA,GAUbE,EAVaD,EAAA,GAUJE,EAVIF,EAAA,GAAAG,EAWMlF,mBAAS,GAXfmF,EAAAnN,OAAAkI,EAAA,EAAAlI,CAAAkN,EAAA,GAWb7G,EAXa8G,EAAA,GAWNC,EAXMD,EAAA,GAadE,EAAiB,SAAC/M,GACpBoI,GAAW,GACkD,OAAzDtH,eAAekI,QAAQ,aAAehJ,GACtCR,EAAOQ,GAAeiJ,KAAK,SAAC/I,GACxB,IACI0L,EAAc1L,GACdkI,GAAW,GACb,MAAAc,GACEd,GAAW,OAInBwD,EAAc5K,KAAKmI,MAAMrI,eAAekI,QAAQ,aAAehJ,IAAkB,OACjFoI,GAAW,KAIb4E,GAAmB,SAAC/K,EAASC,EAAQlC,GACvCoI,GAAW,GACXtG,EAAWG,EAASC,EAAQlC,GAAeiJ,KAAK,SAAC/I,GAC7C,IACI0L,EAAc1L,GACdkI,GAAW,GACb,MAAAmB,GACEnB,GAAW,OAmBjBvD,GAAc,SAACoI,GACjB,IAAMC,EAAUD,EAAM/H,OAAOiI,aAAa,WAC1CR,GAAW,GACXG,EAASI,GACTE,EAAQC,KAAK,gBAAkBH,EAAS,CAAEhK,GAAIgK,KAGlDI,OAAOC,WAAa,WAChB,IAAMC,EAAOJ,EAAQK,SAASC,SAC9B,GAAIF,EAAK5D,SAAS,UAAW,CACzB,IAAM+D,EAAWH,EAAK/B,QAAQ,cAAe,IAC7CkB,GAAW,GACXG,EAASc,OAAOD,SAEhBhB,GAAW,IAInB5D,oBAAU,WACN,IAAMyE,EAAOF,OAAOG,SAASI,KAC7B,GAAIL,EAAK5D,SAAS,UAAW,CACzB,IAAM+D,EAAWH,EAAK/B,QAAQ,YAAa,IAC3CkB,GAAW,GACXG,EAASc,OAAOD,MAErB,IAEH,IA8BMG,GAAc,SAACb,GACjB,IAAM/H,EAAS+H,EAAM/H,OACf4B,EAAQ5B,EAAOiI,aAAa,WAC5BY,EAAa7I,EAAO4B,MACpBkH,EAAY9L,EAAOsH,OAAO,SAAAC,GAAK,OACjCA,IAAU3C,IAERmH,EAAkB7B,EAAa5C,OAAO,SAAAC,GAAK,OAC7CsE,EACItE,EAAM,KAAOsE,EAEbtE,EAAM,KAAO3C,IAIfoH,EAAW9E,SAAS+E,iBAAiB,yBAA2BnN,KAAKC,UAAU6F,GAAS,KAAK,GAE/FoH,IACAA,EAAS5D,SAAU,GAGvBzC,EAAUmG,GACV3B,EAAgB4B,IAqBpB,OARAlF,oBAAU,WACF7G,EAAO+B,OAAS,GAAiB,KAAZhC,EACrB+K,GAAiB/K,EAASC,EAAQ4J,GAElCiB,EAAe/M,IAEpB,CAACkC,EAAQlC,EAAe8L,IAGvBtI,EAAA3D,EAAA4D,cAAA,OAAKC,UAAW,kBACZF,EAAA3D,EAAA4D,cAAC2K,EAAD,CACI5D,kBAvEc,SAACyC,GACvBN,GAAW,GACX,IAAI0B,EAAQjF,SAAS+E,iBAAiB,oBAAoBlK,OACpDiB,EAAS+H,EAAM/H,OACf4B,EAAQ5B,EAAO4B,OAGN,IAFA5B,EAAOoF,SAGlBzC,EAAS,GAAAyG,OAAA5O,OAAA6O,EAAA,EAAA7O,CAAKwC,GAAL,CAAa4E,KACtBuF,EAAe,GAAAiC,OAAA5O,OAAA6O,EAAA,EAAA7O,CAAK0M,GAAL,CAAmB,CAAClH,EAAOgF,KAAMhF,EAAO4B,WAEvDgH,GAAYb,GAGZoB,EAAQ,GACRpC,GAAa,GACb7D,GAAW,IACM,IAAViG,IACPpC,GAAa,GACb7D,GAAW,GACX2E,EAAe/M,KAoDX8J,oBAtBgB,SAACmD,GACzBN,GAAW,GACX,IAAM7F,EAAQmG,EAAM/H,OAAO4B,MACrB0H,EAAMvB,EAAM/H,OACZ8E,EAAYwE,EAAIC,QAAQD,EAAIE,eAAevB,aAAa,WAE9DtB,EAAiB/E,GACjBiF,EAAuB/B,IAgBfH,WA9EO,SAACoD,GAChBN,GAAW,GACXS,EAAQC,KAAK,QA6ELsB,eAAgB,OAEpBnL,EAAA3D,EAAA4D,cAAA,OAAKC,UAAW,aACZF,EAAA3D,EAAA4D,cAAA,WACID,EAAA3D,EAAA4D,cAACmL,EAAD,CACIC,MAAM,EACN5M,QAASA,EACTmF,cA/HE,SAAC6F,GACD,UAAdA,EAAMvH,MACNiH,GAAW,GACXvE,GAAW,GACK,KAAZnG,GACAgK,GAAa,GACbc,MAEAd,GAAa,GACbe,GAAiB/K,EAASC,EAAQ4J,MAuH1BvE,WAAYA,IAEfmF,EACGlJ,EAAA3D,EAAA4D,cAACqL,EAAD,CAAO5L,GAAI6C,IAEXJ,EACInC,EAAA3D,EAAA4D,cAAA,WACID,EAAA3D,EAAA4D,cAACoH,EAAD,OAGJmB,EACIxI,EAAA3D,EAAA4D,cAACsL,EAAD,CACIhJ,MAAO4F,EAAW1H,OAAS,WAC3B/D,QAASyL,EACT9G,YAAaA,IAEXuH,EAAazF,IAAI,SAACqI,EAAaC,GAAd,OACfzL,EAAA3D,EAAA4D,cAAA,UACIiC,IAAKsJ,EAAY,GACjBlK,UAASkK,EAAY,GACrBtL,UAAW,oIACXkB,QAASkJ,IAERkB,EAAY,GANjB,SAWRxL,EAAA3D,EAAA4D,cAACsL,EAAD,CACIhJ,MAAO4F,EAAW1H,OAAS,cAC3B/D,QAASyL,EACT9G,YAAaA,UCzLlCqK,EAtBH,WAER,OACI1L,EAAA3D,EAAA4D,cAAA,WACID,EAAA3D,EAAA4D,cAACiD,EAAA,EAAD,CACIyI,SAAU,KAEV3L,EAAA3D,EAAA4D,cAAC2L,EAAA,EAAD,CACIC,OAAK,EACL7B,KAAM,IACN8B,UAAWC,IAEf/L,EAAA3D,EAAA4D,cAAC2L,EAAA,EAAD,CACIC,OAAK,EACL7B,KAAM,cACN8B,UAAWC,OCRXC,QACW,cAA7BlC,OAAOG,SAASgC,UAEe,UAA7BnC,OAAOG,SAASgC,UAEhBnC,OAAOG,SAASgC,SAASC,MACvB,2DCbNC,IAASC,OAAOpM,EAAA3D,EAAA4D,cAACoM,EAAD,MAASzG,SAAS0G,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhH,KAAK,SAAAiH,GACjCA,EAAaC","file":"static/js/main.6fd9604c.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst proxyUrl = '',\n    genresEndpoint = proxyUrl + 'https://unogs-unogs-v1.p.rapidapi.com/api.cgi?t=genres',\n    searchEndpoint = proxyUrl + 'https://unogs-unogs-v1.p.rapidapi.com/aaapi.cgi',\n    apiKey = '3adfd0f105mshd37f672cb2a6ef6p1cc404jsn3c93ad7906e0',\n    apiHost = 'unogs-unogs-v1.p.rapidapi.com';\n\nconst apiConfig = {\n    headers: {\n        \"X-RapidAPI-Host\": apiHost,\n        \"X-RapidAPI-Key\": apiKey // Replace with valid key\n    },\n    params: {\n        // \"daysback\": \"7\",\n        \"countryid\": \"CAD\"\n        // \"page\": \"1\",\n    }\n}\n\nconst getNew = async (activeCountry) => {\n    const allContent = await axios.get(searchEndpoint, {\n        headers: {\n            \"X-RapidAPI-Host\": apiHost,\n            \"X-RapidAPI-Key\": apiKey // Replace with valid key\n        },\n        params: {\n            \"q\": \"get:new7:\" + activeCountry,\n            \"p\": \"1\",\n            \"t\": \"ns\",\n            \"st\": \"adv\"\n        }\n    });\n    sessionStorage.setItem(\"newContent\" + activeCountry, JSON.stringify(allContent.data.ITEMS));\n    const content = allContent.data.ITEMS;\n    return content;\n}\n\nconst getCountries = async () => {\n    const allContent = await axios.get(searchEndpoint, {\n        headers: {\n            \"X-RapidAPI-Host\": apiHost,\n            \"X-RapidAPI-Key\": apiKey\n        },\n        params: {\n            \"t\": \"lc\",\n            \"q\": \"available\"\n        }\n    });\n    sessionStorage.setItem(\"countries\", JSON.stringify(allContent.data.ITEMS));\n    const content = allContent.data.ITEMS;\n    return content;\n}\n\nconst getResults = async (keyword, genres, activeCountry) => {\n    const allContent = await axios.get(searchEndpoint, {\n        headers: {\n            \"X-RapidAPI-Host\": apiHost,\n            \"X-RapidAPI-Key\": apiKey\n        },\n        params: {\n            \"q\": keyword + \"-!1900,2018-!0,5-!0,10-!\" + genres + \"-!Any-!Any-!Any-!gt100-!{downloadable}\",\n            \"t\": \"ns\",\n            \"cl\": activeCountry,\n            \"st\": \"adv\",\n            \"ob\": \"Relevance\",\n            \"p\": \"1\",\n            \"sa\": \"and\"\n        }\n    });\n    const content = allContent.data.ITEMS;\n    return content;\n}\n\nconst getGenres = async () => {\n    const allContent = await axios.get(genresEndpoint, apiConfig);\n    localStorage.setItem(\"genres\", JSON.stringify(allContent.data.ITEMS));\n    const content = allContent.data.ITEMS;\n    return content;\n\n}\n\nconst getTitle = async (id) => {\n    const allContent = await axios.get(searchEndpoint, {\n        headers: {\n            \"X-RapidAPI-Host\": apiHost,\n            \"X-RapidAPI-Key\": apiKey\n        },\n        params: {\n            \"t\": \"loadvideo\",\n            \"q\": id\n        }\n    });\n    const content = allContent.data.RESULT;\n    return content;\n}\n\nexport {getNew, getCountries, getGenres, getTitle, getResults}","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import React from 'react';\n\nconst Loading = () => {\n    return (\n        <div className={\"border-b border-gray-800 py-4 text-sm loader\"}/>\n    )\n}\n\nexport default Loading;","const slugify = (string) => {\n    const a = 'àáäâãåăæąçćčđďèéěėëêęğǵḧìíïîįłḿǹńňñòóöôœøṕŕřßşśšșťțùúüûǘůűūųẃẍÿýźžż·/_,:;'\n    const b = 'aaaaaaaaacccddeeeeeeegghiiiiilmnnnnooooooprrsssssttuuuuuuuuuwxyyzzz------'\n    const p = new RegExp(a.split('').join('|'), 'g')\n\n    return string.toString().toLowerCase()\n        .replace(/\\s+/g, '-') // Replace spaces with -\n        .replace(p, c => b.charAt(a.indexOf(c))) // Replace special characters\n        .replace(/&/g, '-and-') // Replace & with 'and'\n        .replace(/[^\\w]+/g, '') // Remove all non-word characters\n        .replace(/-+/g, '-') // Replace multiple - with single -\n        .replace(/^-+/, '') // Trim - from start of text\n        .replace(/-+$/, '') // Trim - from end of text\n}\n\nconst netflixUrl = (id) => {\n    return \"https://www.netflix.com/watch/\" + id\n}\n\nconst trailerUrl = (title) => {\n    return \"https://www.youtube.com/results?search_query=\" + title + \" official trailer\"\n}\n\nconst trim = (s) => {\n    const n = s.indexOf('<');\n    s = s.substring(0, n !== -1 ? n : s.length);\n    return s\n}\n\nexport {slugify, netflixUrl, trailerUrl, trim};","import React from 'react';\n\nconst Button = (props) => {\n\n    const buttonStyle = {\n        transition: \"all .1s ease-in\"\n    };\n\n    let classes = \"mr-2 py-1 px-3 text-sm rounded inline-block text-center border cursor-pointer \";\n\n    if (props.type === \"secondary\") {\n        classes += \"border-gray-900 hover:border-gray-600\"\n    }  else {\n        classes += \"bg-gray-900 border-gray-900 hover:bg-gray-700 hover:border-gray-700\"\n    }\n\n    return (\n        props.linkType === 'link' ? (\n                <div\n                    to={props.link}\n                    className={classes}\n                    style={buttonStyle}\n                    onClick={props.handleTitle}\n                    data-id={props.dataId}\n                >\n                    {props.label}\n                </div>\n\n            ) : (\n                <a\n                    href={props.link}\n                    className={classes}\n                    style={buttonStyle}\n                    target={\"_blank\"}\n                    rel={\"norefferer\"}\n                >\n                    {props.label}\n                </a>\n            )\n\n    )\n}\n\nexport default Button;","import React from 'react';\nimport {netflixUrl, trim} from \"../services/Utilities\"\nimport Button from \"./Button\";\n\n\nconst ListItem = (props) => {\n\n    const item_url = \"/title/\" + props.item.netflixid;\n\n    let listClasses = \"flex pb-4 border-b\"\n\n    if (props.index !== props.length) {\n        listClasses += \" mb-4 border-gray-900\"\n    } else {\n        listClasses += \" border-white\"\n    }\n\n    return (\n        <article\n            key={props.item.netflixid}\n            className={listClasses}\n        >\n            <figure className={\"w-1/5\"}>\n                <div onClick={props.handleTitle}>\n                    <img\n                        loading={\"lazy\"}\n                        data-id={props.item.netflixid}\n                        className={\"w-full h-auto rounded cursor-pointer\"}\n                        src={props.item.image} alt={props.item.title}\n                    />\n                </div>\n            </figure>\n            <figcaption className={\"w-4/5 ml-4 flex flex-col\"}>\n                <div onClick={props.handleTitle}>\n                    <h3\n                        data-id={props.item.netflixid}\n                        className={\"text-xl font-semibold mb-2 border-b border-transparent inline-block hover:border-white cursor-pointer\"}\n                        dangerouslySetInnerHTML={{__html: props.item.title}}\n                    />\n                </div>\n                <div className={\"flex flex-grow\"}>\n                    <div className={\"flex flex-col pr-8\"}>\n                        <p\n                            className={\"mb-4 text-gray-500 leading-tight text-sm\"}\n                            dangerouslySetInnerHTML={{__html: trim(props.item.synopsis)}}\n                        />\n                        <div className={\"mt-auto\"}>\n                            <Button\n                                link={netflixUrl(props.item.netflixid)}\n                                label={\"Watch \" + props.item.type}\n                            />\n                            <Button\n                                type={\"secondary\"}\n                                linkType={\"link\"}\n                                link={item_url}\n                                label={\"Learn more\"}\n                                handleTitle={props.handleTitle}\n                                dataId={props.item.netflixid}\n                            />\n                        </div>\n                    </div>\n                    <div className={\"text-right text-gray-500 leading-tight text-sm\"}>\n                        {props.item.rating > 0 &&\n                            <p>{props.item.rating}</p>\n                        }\n                        {props.item.runtime &&\n                            <p>{props.item.runtime}</p>\n                        }\n                        {props.item.released &&\n                            <p>{props.item.released}</p>\n                        }\n                    </div>\n                </div>\n            </figcaption>\n        </article>\n    )\n}\n\nexport default ListItem;","import React from 'react';\nimport ListItem from \"./ListItem\";\nimport {Link} from \"react-router-dom\";\n\n\nconst List = (props) => {\n    return (\n        <section className={\"mb-12\"}>\n            <header className={\"sticky top-0 mb-4 border-b border-gray-800 bg-black z-10 text-xs py-4 flex\"}>\n                <div className={\"flex items-center\"}>\n                    <h2>{props.title}</h2>\n                    {props.children}\n                    {props.page &&\n                        <Link\n                            className={\"ml-auto border-b border-transparent hover:border-white\"}\n                            to={props.page}\n                        >\n                            View all\n                        </Link>\n                    }\n                </div>\n            </header>\n            <section>\n                {props.content.map((item, index) => (\n                        <ListItem\n                            length={props.content.length}\n                            index={index + 1}\n                            key={item.netflixid}\n                            item={item}\n                            handleTitle={props.handleTitle}\n                        />\n                    )\n                )}\n            </section>\n        </section>\n    )\n}\n\nexport default List;","import React from 'react';\n\nconst Search = (props) => {\n    return (\n        <input\n            className={\"sticky top-0 w-full bg-black focus:outline-none text-sm py-4 border-b-2 border-white\"}\n            type={\"text\"}\n            value={props.keyword}\n            placeholder={\"Search titles & actors\"}\n            onChange={e => props.keywordChange(e.target.value)}\n            onKeyDown={props.handleKeyDown}\n        />\n    )\n}\n\nexport default Search;","import React from 'react';\nimport Search from \"./Search\";\n\nconst PageHeader = (props) => {\n    return (\n        <Search\n            keyword={props.keyword}\n            keywordChange={props.setKeyword}\n            handleKeyDown={props.handleKeyDown}\n        />\n    )\n}\n\nexport default PageHeader;","import React, {useState, useEffect} from 'react';\nimport {getCountries, getGenres} from \"../services/ApiData\";\n\nconst Nav = (props) => {\n\n    const [genres, setGenres] = useState([]);\n    const [countries, setCountries] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [filteredGenres, setFilteredGenres] = useState([]);\n    const [finalGenres, setFinalGenres] = useState([]);\n    const [keyword, setKeyword] = useState(\"\");\n\n    useEffect(() => {\n        if (localStorage.getItem(\"genres\") === null) {\n            getGenres().then((content) => {\n                try {\n                    setGenres(content);\n                    setLoading(false);\n                } catch {\n\n                }\n            })\n        } else {\n            setGenres(JSON.parse(localStorage.getItem(\"genres\") || \"[]\"))\n            setLoading(false);\n        }\n\n        if (localStorage.getItem(\"countries\") === null) {\n            getCountries().then((content) => {\n                try {\n                    setCountries(content);\n                    document.querySelector('#select_id [value=\"ca\"]').selected = true;\n                    setLoading(false);\n                } catch {\n\n                }\n            })\n        } else {\n            setCountries(JSON.parse(localStorage.getItem(\"countries\") || \"[]\"))\n            setLoading(false);\n        }\n    }, []);\n\n    useEffect( () => {\n        if (keyword !== \"\") {\n            const filteredGenres = genres.filter(genre =>\n                JSON.stringify(Object.keys(genre)).toLowerCase().includes(keyword)\n            );\n            setFilteredGenres(filteredGenres);\n        } else {\n            setFilteredGenres([])\n        }\n    }, [keyword, genres]);\n\n    useEffect( () => {\n        if (filteredGenres.length > 0) {\n            setFinalGenres(filteredGenres);\n        } else {\n            setFinalGenres(genres);\n        }\n    }, [filteredGenres, genres]);\n\n    return (\n        <header className={\"flex flex-col p-6 md:sticky top-0 h-screen md:w-1/3 w-full\"}>\n            <div>\n                <h1 className={\"text-sm\"}>\n                    <div\n                        onClick={props.handleHome}\n                        className={\"inline-block border-b border-transparent hover:border-white cursor-pointer\"}\n                    >\n                        N²\n                    </div>\n                </h1>\n                <h2 className={\"text-2xl leading-tight max-w-xs my-8\"}>The fastest way to find something to watch on Netflix.</h2>\n            </div>\n            <div className={\"mb-4\"}>\n                {!loading &&\n                    <select\n                        className={\"bg-transparent w-full p-0 appearance-none focus:outline-none text-sm text-gray-500 hover:text-white\"}\n                        onChange={props.handleCountryChange}\n                        defaultValue={\"ca\"}\n                        id={\"select_id\"}\n                    >\n                        {countries.map((item) => {\n                            const number_id = Object.values(item)[0];\n                            const id = Object.values(item)[1];\n                            const name = Object.values(item)[2];\n                            return (\n                                <option\n                                    value={id}\n                                    key={number_id}\n                                    data-id={number_id}\n                                >\n                                    {name}\n                                </option>\n                            )\n                        })\n                        }\n                    </select>\n                }\n            </div>\n            <input\n                className={\"w-full bg-black focus:outline-none text-sm py-4\"}\n                type={\"text\"}\n                value={keyword}\n                placeholder={\"Search genres\"}\n                onChange={e => setKeyword(e.target.value)}\n            />\n            <nav\n                id={\"genres\"}\n                className={\"relative flex-grow overflow-hidden border-b border-t border-gray-800\"}\n            >\n                <div className={\"absolute py-4 top-0 bottom-0 overflow-y-scroll hide-scrollbar\"}>\n                    {!loading &&\n                        finalGenres.map((item) => {\n                            const genreTitle = Object.keys(item)[0];\n                            const genreIds = Object.values(item)[0].join();\n                            return (\n                                <label\n                                    key={genreTitle}\n                                    className={\"block text-sm text-gray-500 hover:text-white\"}\n                                >\n                                    <input\n                                        className={\"genre-checkbox\"}\n                                        name={genreTitle}\n                                        type={\"checkbox\"}\n                                        checked={props.isActive}\n                                        onChange={props.handleInputChange}\n                                        value={genreIds}\n                                    />\n                                    <span className={\"label\"}>{genreTitle}</span>\n                                </label>\n                            )\n                        }\n                    )}\n                </div>\n            </nav>\n        </header>\n    )\n}\n\nexport default Nav;","import React from 'react';\n\nconst DetailItem = (props) => {\n    return (\n        <div className={\"w-1/3\"}>\n            <span className={\"text-sm text-gray-500\"}>{props.label}</span>\n            <p>{props.item}</p>\n        </div>\n    )\n}\n\nexport default DetailItem;","import React from \"react\";\n\nconst PeopleItem = (props) => {\n    return (\n        <div className={\"people-item flex text-sm border-b border-gray-900 py-4\"}>\n            <span className={\"text-gray-500\"}>{props.label}</span>\n            <div className={\"w-4/6 pl-6 ml-auto\"}>\n                <ul className={\"flex flex-wrap\"}>\n                    {props.children}\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nexport default PeopleItem;","import React, {useState, useEffect} from 'react';\nimport {getTitle} from \"../services/ApiData\";\nimport Loading from \"../components/Loading\";\nimport DetailItem from \"../components/DetailItem\";\nimport {netflixUrl, trailerUrl, trim} from \"../services/Utilities\";\nimport Button from \"../components/Button\";\nimport PeopleItem from \"../components/PeopleItem\";\n\nconst Title = (props) => {\n\n    const [content, setContent] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        getTitle(props.id).then((content) => {\n            try {\n                setContent(content);\n                setLoading(false);\n            } catch {\n\n            }\n        })\n    }, [props.id]);\n\n    return (\n        loading ? (\n            <Loading />\n        ) : (\n            <article>\n                <div className={\"border-b border-gray-800 py-6 flex\"}>\n                    <figure className={\"w-2/6\"}>\n                        <img\n                            loading={\"lazy\"}\n                            className={\"rounded w-full h-auto\"}\n                            src={content.nfinfo.image1}\n                            alt={content.nfinfo.title}\n                        />\n                    </figure>\n                    <section className={\"w-4/6 pl-6 flex flex-col\"}>\n                        <div>\n                            <h1 className={\"text-2xl mb-4\"}>{content.nfinfo.title}</h1>\n                            <section className={\"flex border-t border-b border-gray-900 py-3 mb-4\"}>\n                                {content.imdbinfo.rating &&\n                                    content.imdbinfo.rating > 0 &&\n                                        <DetailItem label={\"IMDb Rating\"} item={content.imdbinfo.rating}/>\n                                }\n                                {content.imdbinfo.runtime &&\n                                    <DetailItem label={\"Duration\"} item={content.imdbinfo.runtime}/>\n                                }\n                                {content.nfinfo.released &&\n                                    <DetailItem label={\"Year Released\"} item={content.nfinfo.released}/>\n                                }\n                            </section>\n                            <p\n                                dangerouslySetInnerHTML={{__html: trim(content.nfinfo.synopsis)}}\n                            />\n                        </div>\n                        <div className={\"mt-auto\"}>\n                            <Button\n                                link={netflixUrl(content.nfinfo.netflixid)}\n                                label={\"Watch \" + content.nfinfo.type}\n                            />\n                            <Button\n                                type={\"secondary\"}\n                                link={trailerUrl(content.nfinfo.title)}\n                                label={\"Watch trailer\"}\n                            />\n                        </div>\n                    </section>\n                </div>\n                <section className={\"border-b border-gray-800\"}>\n                    {content.people.map((item) => {\n                        return (\n                            item.director !== undefined &&\n                                item.director.length > 0 &&\n                                    <PeopleItem key={item.director} label={\"Director\"}>\n                                        {item.director.map((item) => {\n                                            return (\n                                                <li key={item} className={\"w-1/2 pr-4\"}>{item}</li>\n                                            )\n                                        })\n                                        }\n                                    </PeopleItem>\n                        )\n                    })\n                    }\n                    {content.people.map((item) => {\n                        return (\n                            item.creator !== undefined &&\n                                item.creator.length > 0 &&\n                                    <PeopleItem key={item.creator} label={\"Creator(s)\"}>\n                                        {item.creator.map((item) => {\n                                            return (\n                                                <li key={item} className={\"w-1/2 pr-4\"}>{item}</li>\n                                            )\n                                        })\n                                        }\n                                    </PeopleItem>\n                        )\n                    })\n                    }\n                    {content.people.map((item) => {\n                        return (\n                            item.actor !== undefined &&\n                                item.actor.length > 0 &&\n                                    <PeopleItem key={item.actor} label={\"Actor(s)\"}>\n                                        {item.actor.map((item) => {\n                                            return (\n                                                <li key={item} className={\"w-1/2 pr-4\"}>{item}</li>\n                                            )\n                                        })\n                                        }\n                                    </PeopleItem>\n                        )\n                    })\n                    }\n                </section>\n                <section className={\"pt-6 pb-12\"}>\n                    {content.imdbinfo.plot &&\n                        <p\n                            dangerouslySetInnerHTML={{__html: content.imdbinfo.plot.replace('amp;','')}}\n                        />\n                    }\n                </section>\n            </article>\n        )\n    )\n}\n\nexport default Title;","import React, {useState, useEffect} from 'react';\nimport {getNew, getResults} from '../services/ApiData'\nimport { withRouter } from \"react-router-dom\";\nimport history from '../history';\n\nimport Loading from \"../components/Loading\";\nimport List from \"../components/List\";\nimport PageHeader from \"../components/PageHeader\";\nimport Nav from \"../components/Nav\";\nimport Title from \"./Title\";\n\nconst Home = (props) => {\n\n    const [newContent, setNewContent] = useState([]);\n    const [activeCountry, setActiveCountry] = useState(\"ca\");\n    const [activeCountryNumber, setActiveCountryNumber] = useState(\"33\");\n    const [loading, setLoading] = useState(true);\n    const [searching, setSearching] = useState(false);\n    const [genres, setGenres] = useState([]);\n    const [activeGenres, setActiveGenres] = useState([]);\n    const [keyword, setKeyword] = useState(\"\");\n    const [isTitle, setIsTitle] = useState(false);\n    const [title, setTitle] = useState(0);\n\n    const getHomeContent = (activeCountry) => {\n        setLoading(true);\n        if (sessionStorage.getItem(\"newContent\" + activeCountry) === null) {\n            getNew(activeCountry).then((content) => {\n                try {\n                    setNewContent(content);\n                    setLoading(false);\n                } catch {\n                    setLoading(false);\n                }\n            });\n        } else {\n            setNewContent(JSON.parse(sessionStorage.getItem(\"newContent\" + activeCountry) || \"[]\"));\n            setLoading(false);\n        }\n    }\n\n    const getSearchResults = (keyword, genres, activeCountry) => {\n        setLoading(true);\n        getResults(keyword, genres, activeCountry).then((content) => {\n            try {\n                setNewContent(content);\n                setLoading(false);\n            } catch {\n                setLoading(false);\n            }\n        });\n    }\n\n    const handleKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            setIsTitle(false);\n            setLoading(true);\n            if (keyword === \"\") {\n                setSearching(false);\n                getHomeContent();\n            } else {\n                setSearching(true);\n                getSearchResults(keyword, genres, activeCountryNumber);\n            }\n        }\n    }\n\n    const handleTitle = (event) => {\n        const titleId = event.target.getAttribute('data-id')\n        setIsTitle(true);\n        setTitle(titleId);\n        history.push('/n2/#/titles/' + titleId, { id: titleId });\n    }\n\n    window.onpopstate = function () {\n        const path = history.location.pathname;\n        if (path.includes('titles')) {\n            const newTitle = path.replace('/n2/titles/', '');\n            setIsTitle(true);\n            setTitle(Number(newTitle));\n        } else {\n            setIsTitle(false);\n        }\n    };\n\n    useEffect(() => {\n        const path = window.location.hash;\n        if (path.includes('titles')) {\n            const newTitle = path.replace('#/titles/', '');\n            setIsTitle(true);\n            setTitle(Number(newTitle));\n        }\n    }, []);\n\n    const handleHome = (event) => {\n        setIsTitle(false);\n        history.push('/n2');\n    }\n\n    const handleInputChange = (event) => {\n        setIsTitle(false);\n        let count = document.querySelectorAll(\"#genres :checked\").length;\n        const target = event.target;\n        const value = target.value;\n        const status = target.checked;\n\n        if (status === true) {\n            setGenres([...genres, value])\n            setActiveGenres([...activeGenres, [target.name, target.value]]);\n        } else {\n            removeGenre(event);\n        }\n\n        if (count > 0) {\n            setSearching(true);\n            setLoading(true);\n        } else if (count === 0) {\n            setSearching(false);\n            setLoading(false);\n            getHomeContent(activeCountry);\n        }\n\n    }\n\n    const removeGenre = (event) => {\n        const target = event.target;\n        const value = target.getAttribute(\"data-id\");\n        const otherValue = target.value;\n        const newGenres = genres.filter(genre =>\n            genre !== value\n        );\n        const newActiveGenres = activeGenres.filter(genre =>\n            otherValue ? (\n                genre[1] !== otherValue\n            ) : (\n                genre[1] !== value\n            )\n        );\n\n        const checkbox = document.querySelectorAll(\".genre-checkbox[value=\" + JSON.stringify(value) + \"]\")[0];\n\n        if (checkbox) {\n            checkbox.checked = false;\n        }\n\n        setGenres(newGenres);\n        setActiveGenres(newActiveGenres);\n    }\n\n    const handleCountryChange = (event) => {\n        setIsTitle(false);\n        const value = event.target.value;\n        const obj = event.target;\n        const number_id = obj.options[obj.selectedIndex].getAttribute('data-id');\n\n        setActiveCountry(value)\n        setActiveCountryNumber(number_id)\n    }\n\n    useEffect(() => {\n        if (genres.length > 0 || keyword !== \"\") {\n            getSearchResults(keyword, genres, activeCountryNumber);\n        } else {\n            getHomeContent(activeCountry);\n        }\n    }, [genres, activeCountry, activeCountryNumber]);\n\n    return (\n        <div className={\"page-container\"}>\n            <Nav\n                handleInputChange={handleInputChange}\n                handleCountryChange={handleCountryChange}\n                handleHome={handleHome}\n                defaultCountry={\"33\"}\n            />\n            <div className={\"container\"}>\n                <div>\n                    <PageHeader\n                        home={true}\n                        keyword={keyword}\n                        handleKeyDown={handleKeyDown}\n                        setKeyword={setKeyword}\n                    />\n                    {isTitle ? (\n                        <Title id={title}/>\n                    ) : (\n                        loading ? (\n                            <div>\n                                <Loading/>\n                            </div>\n                        ) : (\n                            searching ? (\n                                <List\n                                    title={newContent.length + ' results'}\n                                    content={newContent}\n                                    handleTitle={handleTitle}\n                                >\n                                    { activeGenres.map((activeGenre, i) => (\n                                        <button\n                                            key={activeGenre[1]}\n                                            data-id={activeGenre[1]}\n                                            className={\"ml-2 px-1 text-xs rounded inline-block text-center border cursor-pointer border-gray-900 hover:border-gray-600 focus:outline-none\"}\n                                            onClick={removeGenre}\n                                        >\n                                            {activeGenre[0]} x\n                                        </button>\n                                    ))}\n                                </List>\n                            ) : (\n                                <List\n                                    title={newContent.length + \" new titles\"}\n                                    content={newContent}\n                                    handleTitle={handleTitle}\n                                />\n                            )\n                        )\n                        )\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(Home);","import React from 'react';\nimport {HashRouter as Router, Route} from \"react-router-dom\";\nimport './index.css';\nimport Home from './pages/Home'\n\nconst App = () => {\n\n    return (\n        <div>\n            <Router\n                basename={'/'}\n            >\n                <Route\n                    exact\n                    path={'/'}\n                    component={Home}\n                />\n                <Route\n                    exact\n                    path={'/titles/:id'}\n                    component={Home}\n                />\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}