{"version":3,"sources":["services/ApiData.js","components/Loading.js","services/Utilities.js","components/Button.js","components/ListItem.js","components/List.js","components/Search.js","components/PageHeader.js","components/Nav.js","pages/Home.js","components/DetailItem.js","components/PeopleItem.js","pages/Title.js","App.js","serviceWorker.js","index.js"],"names":["searchEndpoint","apiKey","apiHost","apiConfig","headers","X-RapidAPI-Host","X-RapidAPI-Key","params","countryid","getNew","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","allContent","content","wrap","_context","prev","next","axios","get","sent","localStorage","setItem","JSON","stringify","data","ITEMS","abrupt","stop","apply","this","arguments","getResults","_ref2","_callee2","keyword","genres","_context2","q","t","cl","st","ob","p","sa","_x","_x2","getGenres","_ref4","_callee4","_context4","getTitle","_ref5","_callee5","id","_context5","RESULT","_x4","Loading","react_default","createElement","className","netflixUrl","trim","s","n","indexOf","substring","length","Button","props","buttonStyle","transition","classes","type","linkType","react_router_dom","to","link","style","label","href","target","rel","ListItem","item_url","item","netflixid","listClasses","index","key","onClick","onTitlePage","src","image","alt","title","dangerouslySetInnerHTML","__html","synopsis","components_Button","rating","runtime","released","List","page","map","components_ListItem","Search","value","placeholder","onChange","e","keywordChange","onKeyDown","handleKeyDown","PageHeader","components_Search","setKeyword","Nav","_useState","useState","_useState2","slicedToArray","setGenres","_useState3","_useState4","loading","setLoading","_useState5","_useState6","filteredGenres","setFilteredGenres","_useState7","_useState8","finalGenres","setFinalGenres","_useState9","_useState10","useEffect","getItem","then","_unused","parse","filter","genre","keys","toLowerCase","includes","genreTitle","genreIds","values","join","name","checked","isActive","handleInputChange","withRouter","newContent","setNewContent","searching","setSearching","_useState11","_useState12","setTitle","getHomeContent","getSearchResults","_unused2","handleTitlePage","components_Nav","event","count","document","querySelectorAll","concat","toConsumableArray","newGenres","components_PageHeader","home","location","pathname","children","components_Loading","components_List","DetailItem","PeopleItem","Title","setContent","match","pages_Home","nfinfo","image1","imdbinfo","components_DetailItem","people","undefined","director","components_PeopleItem","creator","actor","plot","replace","App","basename","react_router","exact","path","component","Home","Boolean","window","hostname","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a0b3e56c.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst proxyUrl = '',\n    apiUrl = proxyUrl + 'https://unogs-unogs-v1.p.rapidapi.com/aaapi.cgi?q=get:new7:CA&p=1&t=ns&st=adv',\n    genresEndpoint = proxyUrl + 'https://unogs-unogs-v1.p.rapidapi.com/api.cgi?t=genres',\n    searchEndpoint = proxyUrl + 'https://unogs-unogs-v1.p.rapidapi.com/aaapi.cgi',\n    apiKey = '3adfd0f105mshd37f672cb2a6ef6p1cc404jsn3c93ad7906e0',\n    apiHost = 'unogs-unogs-v1.p.rapidapi.com';\n\nconst apiConfig = {\n    headers: {\n        \"X-RapidAPI-Host\": apiHost,\n        \"X-RapidAPI-Key\": apiKey // Replace with valid key\n    },\n    params: {\n        // \"daysback\": \"7\",\n        \"countryid\": \"CAD\"\n        // \"page\": \"1\",\n    }\n}\n\nconst getNew = async () => {\n        const allContent = await axios.get(apiUrl, apiConfig);\n        localStorage.setItem(\"newContent\", JSON.stringify(allContent.data.ITEMS));\n        const content = allContent.data.ITEMS;\n        return content;\n}\n\nconst getResults = async (keyword, genres) => {\n    const allContent = await axios.get(searchEndpoint, {\n        headers: {\n            \"X-RapidAPI-Host\": apiHost,\n            \"X-RapidAPI-Key\": apiKey\n        },\n        params: {\n            \"q\": keyword + \"-!1900,2018-!0,5-!0,10-!\" + genres + \"-!Any-!Any-!Any-!gt100-!{downloadable}\",\n            \"t\": \"ns\",\n            \"cl\": \"all\",\n            \"st\": \"adv\",\n            \"ob\": \"Relevance\",\n            \"p\": \"1\",\n            \"sa\": \"and\"\n        }\n    });\n    const content = allContent.data.ITEMS;\n    return content;\n}\n\nconst getGenre = async (genreIds) => {\n    const allContent = await axios.get(searchEndpoint, {\n        headers: {\n            \"X-RapidAPI-Host\": apiHost,\n            \"X-RapidAPI-Key\": apiKey\n        },\n        params: {\n            \"q\": \"-!1900,2018-!0,5-!0,10-!\" + genreIds + \"-!Any-!Any-!Any-!gt100-!{downloadable}\",\n            \"t\": \"ns\",\n            \"cl\": \"all\",\n            \"st\": \"adv\",\n            \"ob\": \"Relevance\",\n            \"p\": \"1\",\n            \"sa\": \"and\"\n        }\n    });\n    const content = allContent.data.ITEMS;\n    return content;\n}\n\nconst getGenres = async () => {\n    const allContent = await axios.get(genresEndpoint, apiConfig);\n    localStorage.setItem(\"genres\", JSON.stringify(allContent.data.ITEMS));\n    const content = allContent.data.ITEMS;\n    return content;\n\n}\n\nconst getTitle = async (id) => {\n    const allContent = await axios.get(searchEndpoint, {\n        headers: {\n            \"X-RapidAPI-Host\": apiHost,\n            \"X-RapidAPI-Key\": apiKey\n        },\n        params: {\n            \"t\": \"loadvideo\",\n            \"q\": id\n        }\n    });\n    const content = allContent.data.RESULT;\n    return content;\n}\n\nexport {getNew, getGenres, getTitle, getResults, getGenre}","import React from 'react';\n\nconst Loading = () => {\n    return (\n        <div className={\"border-b border-gray-800 py-4 text-sm loader\"}/>\n    )\n}\n\nexport default Loading;","const slugify = (string) => {\n    const a = 'àáäâãåăæąçćčđďèéěėëêęğǵḧìíïîįłḿǹńňñòóöôœøṕŕřßşśšșťțùúüûǘůűūųẃẍÿýźžż·/_,:;'\n    const b = 'aaaaaaaaacccddeeeeeeegghiiiiilmnnnnooooooprrsssssttuuuuuuuuuwxyyzzz------'\n    const p = new RegExp(a.split('').join('|'), 'g')\n\n    return string.toString().toLowerCase()\n        .replace(/\\s+/g, '-') // Replace spaces with -\n        .replace(p, c => b.charAt(a.indexOf(c))) // Replace special characters\n        .replace(/&/g, '-and-') // Replace & with 'and'\n        .replace(/[^\\w]+/g, '') // Remove all non-word characters\n        .replace(/-+/g, '-') // Replace multiple - with single -\n        .replace(/^-+/, '') // Trim - from start of text\n        .replace(/-+$/, '') // Trim - from end of text\n}\n\nconst netflixUrl = (id) => {\n    return \"https://www.netflix.com/watch/\" + id\n}\n\nconst trailerUrl = (title) => {\n    return \"https://www.youtube.com/results?search_query=\" + title + \" official trailer\"\n}\n\nconst trim = (s) => {\n    const n = s.indexOf('<');\n    s = s.substring(0, n !== -1 ? n : s.length);\n    return s\n}\n\nexport {slugify, netflixUrl, trailerUrl, trim};","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nconst Button = (props) => {\n\n    const buttonStyle = {\n        transition: \"all .1s ease-in\"\n    };\n\n    let classes = \"mr-2 py-1 px-3 text-sm rounded inline-block text-center border \";\n\n    if (props.type === \"secondary\") {\n        classes += \"border-gray-900 hover:border-gray-600\"\n    }  else {\n        classes += \"bg-gray-900 border-gray-900 hover:bg-gray-700 hover:border-gray-700\"\n    }\n\n    return (\n        props.linkType === 'link' ? (\n                <Link\n                    to={props.link}\n                    className={classes}\n                    style={buttonStyle}\n                >\n                    {props.label}\n                </Link>\n\n            ) : (\n                <a\n                    href={props.link}\n                    className={classes}\n                    style={buttonStyle}\n                    target={\"_blank\"}\n                    rel={\"norefferer\"}\n                >\n                    {props.label}\n                </a>\n            )\n\n    )\n}\n\nexport default Button;","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport {netflixUrl, trim} from \"../services/Utilities\"\nimport Button from \"./Button\";\n\n\nconst ListItem = (props) => {\n\n    const item_url = \"/title/\" + props.item.netflixid;\n\n    let listClasses = \"flex pb-4 border-b\"\n\n    if (props.index !== props.length) {\n        listClasses += \" mb-4 border-gray-900\"\n    } else {\n        listClasses += \" border-white\"\n    }\n\n    return (\n        <article\n            key={props.item.netflixid}\n            className={listClasses}\n            onClick={props.onTitlePage}\n        >\n            <figure className={\"w-1/5\"}>\n                <Link to={item_url}>\n                    <img\n                        className={\"w-full h-auto rounded\"}\n                        src={props.item.image} alt={props.item.title}\n                    />\n                </Link>\n            </figure>\n            <figcaption className={\"w-4/5 ml-4 flex flex-col\"}>\n                <Link to={item_url}>\n                    <h3\n                        className={\"text-xl font-semibold mb-2 border-b border-transparent inline-block hover:border-white\"}\n                        dangerouslySetInnerHTML={{__html: props.item.title}}\n                    />\n                </Link>\n                <div className={\"flex flex-grow\"}>\n                    <div className={\"flex flex-col pr-8\"}>\n                        <p\n                            className={\"mb-4 text-gray-500 leading-tight text-sm\"}\n                            dangerouslySetInnerHTML={{__html: trim(props.item.synopsis)}}\n                        />\n                        <div className={\"mt-auto\"}>\n                            <Button\n                                link={netflixUrl(props.item.netflixid)}\n                                label={\"Watch \" + props.item.type}\n                            />\n                            <Button\n                                type={\"secondary\"}\n                                linkType={\"link\"}\n                                link={item_url}\n                                label={\"Learn more\"}\n                            />\n                        </div>\n                    </div>\n                    <div className={\"text-right text-gray-500 leading-tight text-sm\"}>\n                        {props.item.rating > 0 &&\n                            <p>{props.item.rating}</p>\n                        }\n                        {props.item.runtime &&\n                            <p>{props.item.runtime}</p>\n                        }\n                        {props.item.released &&\n                            <p>{props.item.released}</p>\n                        }\n                    </div>\n                </div>\n            </figcaption>\n        </article>\n    )\n}\n\nexport default ListItem;","import React from 'react';\nimport ListItem from \"./ListItem\";\nimport {Link} from \"react-router-dom\";\n\n\nconst List = (props) => {\n    return (\n        <section className={\"mb-12\"}>\n            <header className={\"sticky top-0 mb-4 border-b border-gray-800 bg-black z-10 text-xs py-4 flex\"}>\n                    <h2>{props.title}</h2>\n                    {props.page &&\n                        <Link\n                            className={\"ml-auto border-b border-transparent hover:border-white\"}\n                            to={props.page}\n                        >\n                            View all\n                        </Link>\n                    }\n            </header>\n            <section>\n                {props.content.map((item, index) => (\n                        <ListItem\n                            length={props.content.length}\n                            index={index + 1}\n                            key={item.netflixid}\n                            item={item}\n                            onTitlePage={props.onTitlePage}\n                        />\n                    )\n                )}\n            </section>\n        </section>\n    )\n}\n\nexport default List;","import React from 'react';\n\nconst Search = (props) => {\n    return (\n        <input\n            className={\"sticky top-0 w-full bg-black focus:outline-none text-sm py-4 border-b-2 border-white\"}\n            type={\"text\"}\n            value={props.keyword}\n            placeholder={\"Search titles & actors\"}\n            onChange={e => props.keywordChange(e.target.value)}\n            onKeyDown={props.handleKeyDown}\n        />\n    )\n}\n\nexport default Search;","import React from 'react';\nimport Search from \"./Search\";\n\nconst PageHeader = (props) => {\n    return (\n        <Search\n            keyword={props.keyword}\n            keywordChange={props.setKeyword}\n            handleKeyDown={props.handleKeyDown}\n        />\n    )\n}\n\nexport default PageHeader;","import React, {useState, useEffect} from 'react';\nimport {Link} from \"react-router-dom\";\nimport {getGenres} from \"../services/ApiData\";\n\nconst Nav = (props) => {\n\n    const [genres, setGenres] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [filteredGenres, setFilteredGenres] = useState([]);\n    const [finalGenres, setFinalGenres] = useState([]);\n    const [keyword, setKeyword] = useState(\"\");\n\n    useEffect(() => {\n        if (localStorage.getItem(\"genres\") === null) {\n            getGenres().then((content) => {\n                try {\n                    setGenres(content);\n                    setLoading(false);\n                } catch {\n\n                }\n            })\n        } else {\n            setGenres(JSON.parse(localStorage.getItem(\"genres\") || \"[]\"))\n            setLoading(false);\n        }\n    }, []);\n\n    useEffect( () => {\n        if (keyword !== \"\") {\n            const filteredGenres = genres.filter(genre =>\n                JSON.stringify(Object.keys(genre)).toLowerCase().includes(keyword)\n            );\n            setFilteredGenres(filteredGenres);\n        } else {\n            setFilteredGenres([])\n        }\n    }, [keyword, genres]);\n\n    useEffect( () => {\n        if (filteredGenres.length > 0) {\n            setFinalGenres(filteredGenres);\n        } else {\n            setFinalGenres(genres);\n        }\n    }, [filteredGenres, genres]);\n\n    return (\n        <header className={\"flex flex-col p-6 md:sticky top-0 h-screen md:w-1/3 w-full\"}>\n            <div>\n                <h1 className={\"text-sm\"}>\n                    <Link\n                        to={\"/\"}\n                        className={\"border-b border-transparent hover:border-white\"}\n                    >\n                        N²\n                    </Link>\n                </h1>\n                <h2 className={\"text-2xl leading-tight max-w-xs my-8\"}>The fastest way to find something to watch on Netflix.</h2>\n            </div>\n            <input\n                className={\"w-full bg-black focus:outline-none text-sm py-4\"}\n                type={\"text\"}\n                value={keyword}\n                placeholder={\"Search genres\"}\n                onChange={e => setKeyword(e.target.value)}\n            />\n            <nav\n                id={\"genres\"}\n                className={\"relative flex-grow overflow-hidden border-b border-t border-gray-800\"}\n            >\n                <div className={\"absolute py-4 top-0 bottom-0 overflow-y-scroll hide-scrollbar\"}>\n                    {!loading &&\n                        finalGenres.map((item) => {\n                            const genreTitle = Object.keys(item)[0];\n                            const genreIds = Object.values(item)[0].join();\n                            return (\n                                <label\n                                    key={genreTitle}\n                                    className={\"block text-sm checkbox-container\"}\n                                >\n                                    <input\n                                        name={genreTitle}\n                                        type={\"checkbox\"}\n                                        className={\"border-b border-transparent hover:border-white mr-2\"}\n                                        checked={props.isActive}\n                                        onChange={props.handleInputChange}\n                                        value={genreIds}\n                                    />\n                                    <span className={\"checkmark\"}></span>\n                                    <span className={\"label\"}>{genreTitle}</span>\n                                </label>\n                            )\n                        }\n                    )}\n                </div>\n            </nav>\n        </header>\n    )\n}\n\nexport default Nav;","import React, {useState, useEffect} from 'react';\nimport {getNew, getResults} from '../services/ApiData'\nimport { withRouter } from \"react-router-dom\";\n\nimport Loading from \"../components/Loading\";\nimport List from \"../components/List\";\nimport PageHeader from \"../components/PageHeader\";\nimport Nav from \"../components/Nav\";\n\nconst Home = (props) => {\n\n    const [newContent, setNewContent] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [searching, setSearching] = useState(false);\n    const [genres, setGenres] = useState([]);\n    const [keyword, setKeyword] = useState(\"\");\n    const [title, setTitle] = useState(true);\n\n\n    const getHomeContent = () => {\n        if (localStorage.getItem(\"newContent\") === null) {\n            getNew().then((content) => {\n                try {\n                    setNewContent(content);\n                    setLoading(false);\n                } catch {\n                    setLoading(false);\n                }\n            });\n        } else {\n            setNewContent(JSON.parse(localStorage.getItem(\"newContent\") || \"[]\"));\n            setLoading(false);\n        }\n    }\n\n    const getSearchResults = (keyword, genres) => {\n        getResults(keyword, genres).then((content) => {\n            try {\n                setNewContent(content);\n                setLoading(false);\n            } catch {\n                setLoading(false);\n            }\n        });\n    }\n\n    useEffect(() => {\n        setSearching(false);\n        getHomeContent();\n    }, []);\n\n    const handleKeyDown = (e) => {\n        if (e.key === 'Enter') {\n            setTitle(false);\n            setLoading(true);\n            if (keyword === \"\") {\n                setSearching(false);\n                getHomeContent();\n            } else {\n                setSearching(true);\n                getSearchResults(keyword, genres);\n            }\n        }\n    }\n\n    const handleTitlePage = () => {\n        setTitle(true);\n    }\n\n    const handleInputChange = (event) => {\n        setTitle(false);\n        let count = document.querySelectorAll(\"#genres :checked\").length;\n        const target = event.target;\n        const value = target.value;\n        const status = target.checked;\n\n        if (status === true) {\n            setGenres([...genres, value])\n        } else {\n            const newGenres = genres.filter(genre =>\n                genre !== value\n            );\n            setGenres(newGenres);\n        }\n\n        if (count > 0) {\n            setSearching(true);\n            setLoading(true);\n        } else if (count === 0) {\n            setSearching(false);\n            setLoading(false);\n            getHomeContent();\n        }\n\n    }\n\n    useEffect(() => {\n        if (genres.length > 0) {\n            getSearchResults(keyword, genres);\n        }\n    }, [keyword, genres])\n\n    return (\n        <div className={\"page-container\"}>\n            <Nav\n                handleInputChange={handleInputChange}\n            />\n            <div className={\"container\"}>\n                <div>\n                    <PageHeader\n                        home={true}\n                        keyword={keyword}\n                        handleKeyDown={handleKeyDown}\n                        setKeyword={setKeyword}\n                    />\n                    {props.location.pathname.includes('title') && title ? (\n                        props.children\n                    ) : (\n                        loading ? (\n                            <div>\n                                <Loading/>\n                            </div>\n                        ) : (\n                            searching ? (\n                                <List\n                                    title={newContent.length + ' results'}\n                                    content={newContent}\n                                    onTitlePage={handleTitlePage}\n                                />\n                            ) : (\n                                <List\n                                    title={newContent.length + \" new titles\"}\n                                    content={newContent}\n                                    onTitlePage={handleTitlePage}\n                                />\n                            )\n                        )\n                        )\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(Home);","import React from 'react';\n\nconst DetailItem = (props) => {\n    return (\n        <div className={\"w-1/3\"}>\n            <span className={\"text-sm text-gray-500\"}>{props.label}</span>\n            <p>{props.item}</p>\n        </div>\n    )\n}\n\nexport default DetailItem;","import React from \"react\";\n\nconst PeopleItem = (props) => {\n    return (\n        <div className={\"people-item flex text-sm border-b border-gray-900 py-4\"}>\n            <span className={\"text-gray-500\"}>{props.label}</span>\n            <div className={\"w-4/6 pl-6 ml-auto\"}>\n                <ul className={\"flex flex-wrap\"}>\n                    {props.children}\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nexport default PeopleItem;","import React, {useState, useEffect} from 'react';\nimport Home from './Home.js'\nimport {getTitle} from \"../services/ApiData\";\nimport Loading from \"../components/Loading\";\nimport DetailItem from \"../components/DetailItem\";\nimport {netflixUrl, trailerUrl, trim} from \"../services/Utilities\";\nimport Button from \"../components/Button\";\nimport PeopleItem from \"../components/PeopleItem\";\n\nconst Title = (props) => {\n\n    const [content, setContent] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        getTitle(props.match.params.id).then((content) => {\n            try {\n                setContent(content);\n                setLoading(false);\n            } catch {\n\n            }\n        })\n    }, [props.match.params.id]);\n\n    return (\n        <Home>\n            {loading ? (\n                <Loading />\n            ) : (\n                <article>\n                    <div className={\"border-b border-gray-800 py-6 flex\"}>\n                        <figure className={\"w-2/6\"}>\n                            <img\n                                className={\"rounded w-full h-auto\"}\n                                src={content.nfinfo.image1}\n                                alt={content.nfinfo.title}\n                            />\n                        </figure>\n                        <section className={\"w-4/6 pl-6 flex flex-col\"}>\n                            <div>\n                                <h1 className={\"text-2xl mb-4\"}>{content.nfinfo.title}</h1>\n                                <section className={\"flex border-t border-b border-gray-900 py-3 mb-4\"}>\n                                    {content.imdbinfo.rating &&\n                                        content.imdbinfo.rating > 0 &&\n                                            <DetailItem label={\"IMDb Rating\"} item={content.imdbinfo.rating}/>\n                                    }\n                                    {content.imdbinfo.runtime &&\n                                        <DetailItem label={\"Duration\"} item={content.imdbinfo.runtime}/>\n                                    }\n                                    {content.nfinfo.released &&\n                                        <DetailItem label={\"Year Released\"} item={content.nfinfo.released}/>\n                                    }\n                                </section>\n                                <p\n                                    dangerouslySetInnerHTML={{__html: trim(content.nfinfo.synopsis)}}\n                                />\n                            </div>\n                            <div className={\"mt-auto\"}>\n                                <Button\n                                    link={netflixUrl(content.nfinfo.netflixid)}\n                                    label={\"Watch \" + content.nfinfo.type}\n                                />\n                                <Button\n                                    type={\"secondary\"}\n                                    link={trailerUrl(content.nfinfo.title)}\n                                    label={\"Watch trailer\"}\n                                />\n                            </div>\n                        </section>\n                    </div>\n                    <section className={\"border-b border-gray-800\"}>\n                        {content.people.map((item) => {\n                            return (\n                                item.director !== undefined &&\n                                    item.director.length > 0 &&\n                                        <PeopleItem key={item.director} label={\"Director\"}>\n                                            {item.director.map((item) => {\n                                                return (\n                                                    <li key={item} className={\"w-1/2 pr-4\"}>{item}</li>\n                                                )\n                                            })\n                                            }\n                                        </PeopleItem>\n                            )\n                        })\n                        }\n                        {content.people.map((item) => {\n                            return (\n                                item.creator !== undefined &&\n                                    item.creator.length > 0 &&\n                                        <PeopleItem key={item.creator} label={\"Creator(s)\"}>\n                                            {item.creator.map((item) => {\n                                                return (\n                                                    <li key={item} className={\"w-1/2 pr-4\"}>{item}</li>\n                                                )\n                                            })\n                                            }\n                                        </PeopleItem>\n                            )\n                        })\n                        }\n                        {content.people.map((item) => {\n                            return (\n                                item.actor !== undefined &&\n                                    item.actor.length > 0 &&\n                                        <PeopleItem key={item.actor} label={\"Actor(s)\"}>\n                                            {item.actor.map((item) => {\n                                                return (\n                                                    <li key={item} className={\"w-1/2 pr-4\"}>{item}</li>\n                                                )\n                                            })\n                                            }\n                                        </PeopleItem>\n                            )\n                        })\n                        }\n                    </section>\n                    <section className={\"pt-6 pb-12\"}>\n                        {content.imdbinfo.plot &&\n                            <p\n                                dangerouslySetInnerHTML={{__html: content.imdbinfo.plot.replace('amp;','')}}\n                            />\n                        }\n                    </section>\n                </article>\n            )\n            }\n        </Home>\n    )\n}\n\nexport default Title;","import React from 'react';\nimport {HashRouter as Router, Route} from \"react-router-dom\";\nimport './index.css';\nimport Home from './pages/Home'\nimport Title from \"./pages/Title\";\n\nconst App = () => {\n\n    return (\n        <div>\n            <Router basename={'/'}>\n                <Route\n                    exact\n                    path={'/'}\n                    component={Home}\n                />\n                <Route\n                    path={'/title/:id'}\n                    component={Title}\n                />\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}