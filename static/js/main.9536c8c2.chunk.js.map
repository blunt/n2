{"version":3,"sources":["assets/images/rotten.svg","assets/images/imdb.svg","assets/images/remove.svg","services/ApiData.js","history.js","components/Loading.js","services/Utilities.js","components/Button.js","components/ListItem.js","components/List.js","components/Search.js","components/PageHeader.js","components/Nav.js","components/DetailItem.js","components/PeopleItem.js","pages/Title.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","searchEndpoint","apiKey","apiHost","apiConfig","headers","X-RapidAPI-Host","X-RapidAPI-Key","params","countryid","getNew","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","activeCountry","allContent","content","wrap","_context","prev","next","axios","get","q","t","st","sent","sessionStorage","setItem","JSON","stringify","data","ITEMS","abrupt","stop","_x","apply","this","arguments","getCountries","_ref2","_callee2","_context2","getResults","_ref3","_callee3","keyword","genres","_context3","cl","ob","sa","_x2","_x3","_x4","getGenres","_ref4","_callee4","_context4","localStorage","getTitle","_ref5","_callee5","id","_context5","RESULT","_x5","createBrowserHistory","Loading","react_default","createElement","className","netflixUrl","trailerUrl","title","trim","s","n","indexOf","substring","length","Button","props","buttonStyle","transition","classes","type","linkType","to","link","style","onClick","handleTitle","data-id","dataId","label","href","target","rel","children","ListItem","item_url","item","netflixid","listClasses","index","key","src","image","alt","dangerouslySetInnerHTML","__html","synopsis","components_Button","rating","runtime","released","List","page","react_router_dom","map","components_ListItem","Search","value","placeholder","onChange","e","keywordChange","onKeyDown","handleKeyDown","PageHeader","components_Search","setKeyword","Nav","_useState","useState","_useState2","slicedToArray","setGenres","_useState3","_useState4","countries","setCountries","_useState5","_useState6","loading","setLoading","_useState7","_useState8","filteredGenres","setFilteredGenres","_useState9","_useState10","finalGenres","setFinalGenres","_useState11","_useState12","useEffect","getItem","then","_unused","parse","document","querySelector","selected","_unused2","filter","genre","keys","toLowerCase","includes","handleHome","handleCountryChange","defaultValue","number_id","values","name","genreTitle","genreIds","join","checked","isActive","handleInputChange","DetailItem","PeopleItem","Title","setContent","components_Loading","nfinfo","image1","handleCloseTitle","width","height","viewBox","fill","xmlns","fill-rule","clip-rule","d","imdbinfo","components_DetailItem","imdbid","IMDb","Rotten","people","undefined","director","components_PeopleItem","creator","actor","plot","replace","withRouter","newContent","setNewContent","setActiveCountry","activeCountryNumber","setActiveCountryNumber","searching","setSearching","_useState13","_useState14","activeGenres","setActiveGenres","_useState15","_useState16","_useState17","_useState18","isTitle","setIsTitle","_useState19","_useState20","setTitle","getHomeContent","getSearchResults","event","titleId","getAttribute","history","push","window","onpopstate","path","location","pathname","newTitle","Number","removeGenre","otherValue","newGenres","newActiveGenres","checkbox","querySelectorAll","hash","components_Nav","concat","toConsumableArray","count","obj","options","selectedIndex","defaultCountry","components_PageHeader","home","pages_Title","go","components_List","activeGenre","i","App","basename","react_router","exact","component","Home","Boolean","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9536c8c2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rotten.138f1d80.svg\";","module.exports = __webpack_public_path__ + \"static/media/imdb.c91b2edf.svg\";","module.exports = __webpack_public_path__ + \"static/media/remove.21f997ec.svg\";","import axios from 'axios'\n\nconst proxyUrl = '',\n    genresEndpoint = proxyUrl + 'https://unogs-unogs-v1.p.rapidapi.com/api.cgi?t=genres',\n    searchEndpoint = proxyUrl + 'https://unogs-unogs-v1.p.rapidapi.com/aaapi.cgi',\n    apiKey = '3adfd0f105mshd37f672cb2a6ef6p1cc404jsn3c93ad7906e0',\n    apiHost = 'unogs-unogs-v1.p.rapidapi.com';\n\nconst apiConfig = {\n    headers: {\n        \"X-RapidAPI-Host\": apiHost,\n        \"X-RapidAPI-Key\": apiKey // Replace with valid key\n    },\n    params: {\n        // \"daysback\": \"7\",\n        \"countryid\": \"CAD\"\n        // \"page\": \"1\",\n    }\n}\n\nconst getNew = async (activeCountry) => {\n    const allContent = await axios.get(searchEndpoint, {\n        headers: {\n            \"X-RapidAPI-Host\": apiHost,\n            \"X-RapidAPI-Key\": apiKey // Replace with valid key\n        },\n        params: {\n            \"q\": \"get:new7:\" + activeCountry,\n            \"p\": \"1\",\n            \"t\": \"ns\",\n            \"st\": \"adv\"\n        }\n    });\n    sessionStorage.setItem(\"newContent\" + activeCountry, JSON.stringify(allContent.data.ITEMS));\n    const content = allContent.data.ITEMS;\n    return content;\n}\n\nconst getCountries = async () => {\n    const allContent = await axios.get(searchEndpoint, {\n        headers: {\n            \"X-RapidAPI-Host\": apiHost,\n            \"X-RapidAPI-Key\": apiKey\n        },\n        params: {\n            \"t\": \"lc\",\n            \"q\": \"available\"\n        }\n    });\n    sessionStorage.setItem(\"countries\", JSON.stringify(allContent.data.ITEMS));\n    const content = allContent.data.ITEMS;\n    return content;\n}\n\nconst getResults = async (keyword, genres, activeCountry) => {\n    const allContent = await axios.get(searchEndpoint, {\n        headers: {\n            \"X-RapidAPI-Host\": apiHost,\n            \"X-RapidAPI-Key\": apiKey\n        },\n        params: {\n            \"q\": keyword + \"-!1900,2018-!0,5-!0,10-!\" + genres + \"-!Any-!Any-!Any-!gt100-!{downloadable}\",\n            \"t\": \"ns\",\n            \"cl\": activeCountry,\n            \"st\": \"adv\",\n            \"ob\": \"Relevance\",\n            \"p\": \"1\",\n            \"sa\": \"and\"\n        }\n    });\n    const content = allContent.data.ITEMS;\n    return content;\n}\n\nconst getGenres = async () => {\n    const allContent = await axios.get(genresEndpoint, apiConfig);\n    localStorage.setItem(\"genres\", JSON.stringify(allContent.data.ITEMS));\n    const content = allContent.data.ITEMS;\n    return content;\n\n}\n\nconst getTitle = async (id) => {\n    const allContent = await axios.get(searchEndpoint, {\n        headers: {\n            \"X-RapidAPI-Host\": apiHost,\n            \"X-RapidAPI-Key\": apiKey\n        },\n        params: {\n            \"t\": \"loadvideo\",\n            \"q\": id\n        }\n    });\n    const content = allContent.data.RESULT;\n    return content;\n}\n\nexport {getNew, getCountries, getGenres, getTitle, getResults}","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import React from 'react';\n\nconst Loading = () => {\n    return (\n        <div className={\"border-b border-gray-800 py-4 text-sm loader\"}/>\n    )\n}\n\nexport default Loading;","const slugify = (string) => {\n    const a = 'àáäâãåăæąçćčđďèéěėëêęğǵḧìíïîįłḿǹńňñòóöôœøṕŕřßşśšșťțùúüûǘůűūųẃẍÿýźžż·/_,:;'\n    const b = 'aaaaaaaaacccddeeeeeeegghiiiiilmnnnnooooooprrsssssttuuuuuuuuuwxyyzzz------'\n    const p = new RegExp(a.split('').join('|'), 'g')\n\n    return string.toString().toLowerCase()\n        .replace(/\\s+/g, '-') // Replace spaces with -\n        .replace(p, c => b.charAt(a.indexOf(c))) // Replace special characters\n        .replace(/&/g, '-and-') // Replace & with 'and'\n        .replace(/[^\\w]+/g, '') // Remove all non-word characters\n        .replace(/-+/g, '-') // Replace multiple - with single -\n        .replace(/^-+/, '') // Trim - from start of text\n        .replace(/-+$/, '') // Trim - from end of text\n}\n\nconst netflixUrl = (id) => {\n    return \"https://www.netflix.com/watch/\" + id;\n}\n\nconst trailerUrl = (title) => {\n    return \"https://www.youtube.com/results?search_query=\" + title + \" official trailer\";\n}\n\nconst imdbUrl = (id) => {\n    return \"https://imdb.com/title/\" + id;\n}\n\nconst rottenUrl = (title, year) => {\n    return \"https://www.rottentomatoes.com/search/?search=\" + title\n}\n\nconst trim = (s) => {\n    const n = s.indexOf('<');\n    s = s.substring(0, n !== -1 ? n : s.length);\n    return s\n}\n\nexport {slugify, netflixUrl, trailerUrl, rottenUrl, imdbUrl, trim};","import React from 'react';\n\nconst Button = (props) => {\n\n    const buttonStyle = {\n        transition: \"all .1s ease-in\"\n    };\n\n    let classes = \"mr-2 py-1 px-3 text-sm rounded inline-block text-center border cursor-pointer \";\n\n    if (props.type === \"secondary\") {\n        classes += \"border-gray-900 hover:border-gray-600\"\n    }  else {\n        classes += \"bg-gray-900 border-gray-900 hover:bg-gray-700 hover:border-gray-700\"\n    }\n\n    return (\n        props.linkType === 'link' ? (\n                <div\n                    to={props.link}\n                    className={classes}\n                    style={buttonStyle}\n                    onClick={props.handleTitle}\n                    data-id={props.dataId}\n                >\n                    {props.label}\n                </div>\n\n            ) : (\n                <a\n                    href={props.link}\n                    className={classes}\n                    style={buttonStyle}\n                    target={\"_blank\"}\n                    rel={\"noopener noreferrer\"}\n                >\n                    {props.label}\n                    {props.children}\n                </a>\n            )\n\n    )\n}\n\nexport default Button;","import React from 'react';\nimport {netflixUrl, trailerUrl, trim} from \"../services/Utilities\"\nimport Button from \"./Button\";\n\n\nconst ListItem = (props) => {\n\n    const item_url = \"/title/\" + props.item.netflixid;\n\n    let listClasses = \"flex pb-4 border-b\"\n\n    if (props.index !== props.length) {\n        listClasses += \" mb-4 border-gray-900\"\n    } else {\n        listClasses += \" border-white\"\n    }\n\n    return (\n        <article\n            key={props.item.netflixid}\n            className={listClasses}\n        >\n            <figure className={\"w-1/5\"}>\n                <a\n                    className={\"block img-wrapper rounded overflow-hidden\"}\n                    href={netflixUrl(props.item.netflixid)}\n                    target={\"_blank\"}\n                    rel={\"noopener noreferrer\"}\n                >\n                    <img\n                        data-id={props.item.netflixid}\n                        className={\"w-full h-auto cursor-pointer\"}\n                        src={props.item.image}\n                        alt={props.item.title}\n                    />\n                </a>\n\n            </figure>\n            <figcaption className={\"w-4/5 ml-4 flex flex-col\"}>\n                <div onClick={props.handleTitle}>\n                    <h3\n                        data-id={props.item.netflixid}\n                        className={\"text-xl font-medium mb-2 border-b border-transparent hover:border-white inline-block cursor-pointer\"}\n                        dangerouslySetInnerHTML={{__html: props.item.title}}\n                    />\n                </div>\n                <div className={\"flex flex-grow\"}>\n                    <div className={\"flex flex-col pr-8\"}>\n                        <p\n                            className={\"mb-4 text-gray-500\"}\n                            dangerouslySetInnerHTML={{__html: trim(props.item.synopsis)}}\n                        />\n                        <div className={\"mt-auto\"}>\n                            <Button\n                                link={trailerUrl(props.item.title)}\n                                label={\"Watch trailer\"}\n                            />\n                            <Button\n                                type={\"secondary\"}\n                                linkType={\"link\"}\n                                link={item_url}\n                                label={\"Learn more\"}\n                                handleTitle={props.handleTitle}\n                                dataId={props.item.netflixid}\n                            />\n                        </div>\n                    </div>\n                    <div className={\"text-right text-gray-500 leading-tight text-sm\"}>\n                        {props.item.rating > 0 &&\n                            <p>{props.item.rating}</p>\n                        }\n                        {props.item.runtime &&\n                            <p>{props.item.runtime}</p>\n                        }\n                        {props.item.released &&\n                            <p>{props.item.released}</p>\n                        }\n                    </div>\n                </div>\n            </figcaption>\n        </article>\n    )\n}\n\nexport default ListItem;","import React from 'react';\nimport ListItem from \"./ListItem\";\nimport {Link} from \"react-router-dom\";\n\n\nconst List = (props) => {\n    return (\n        <section className={\"mb-6\"}>\n            <header className={\"sticky top-0 mb-4 border-b border-gray-800 bg-black z-10 text-xs py-4 flex\"}>\n                <div className={\"flex items-center\"}>\n                    <h2>{props.title}</h2>\n                    {props.children}\n                    {props.page &&\n                        <Link\n                            className={\"ml-auto border-b border-transparent hover:border-white\"}\n                            to={props.page}\n                        >\n                            View all\n                        </Link>\n                    }\n                </div>\n            </header>\n            <section>\n                {props.content.map((item, index) => (\n                        <ListItem\n                            length={props.content.length}\n                            index={index + 1}\n                            key={item.netflixid}\n                            item={item}\n                            handleTitle={props.handleTitle}\n                        />\n                    )\n                )}\n            </section>\n        </section>\n    )\n}\n\nexport default List;","import React from 'react';\n\nconst Search = (props) => {\n    return (\n        <div className={\"search-field relative sticky bg-black z-10 top-0 border-b-2 border-white flex items-center\"}>\n            <input\n                className={\"w-full bg-black focus:outline-none text-sm py-4\"}\n                type={\"text\"}\n                value={props.keyword}\n                placeholder={\"Search titles & actors\"}\n                onChange={e => props.keywordChange(e.target.value)}\n                onKeyDown={props.handleKeyDown}\n            />\n        </div>\n    )\n}\n\nexport default Search;","import React from 'react';\nimport Search from \"./Search\";\n\nconst PageHeader = (props) => {\n    return (\n        <Search\n            keyword={props.keyword}\n            keywordChange={props.setKeyword}\n            handleKeyDown={props.handleKeyDown}\n        />\n    )\n}\n\nexport default PageHeader;","import React, {useState, useEffect} from 'react';\nimport {getCountries, getGenres} from \"../services/ApiData\";\n\nconst Nav = (props) => {\n\n    const [genres, setGenres] = useState([]);\n    const [countries, setCountries] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [filteredGenres, setFilteredGenres] = useState([]);\n    const [finalGenres, setFinalGenres] = useState([]);\n    const [keyword, setKeyword] = useState(\"\");\n\n    useEffect(() => {\n        if (localStorage.getItem(\"genres\") === null) {\n            getGenres().then((content) => {\n                try {\n                    setGenres(content);\n                    setLoading(false);\n                } catch {\n\n                }\n            })\n        } else {\n            setGenres(JSON.parse(localStorage.getItem(\"genres\") || \"[]\"))\n            setLoading(false);\n        }\n\n        if (localStorage.getItem(\"countries\") === null) {\n            getCountries().then((content) => {\n                try {\n                    setCountries(content);\n                    document.querySelector('#select_id [value=\"ca\"]').selected = true;\n                    setLoading(false);\n                } catch {\n\n                }\n            })\n        } else {\n            setCountries(JSON.parse(localStorage.getItem(\"countries\") || \"[]\"))\n            setLoading(false);\n        }\n    }, []);\n\n    useEffect( () => {\n        if (keyword !== \"\") {\n            const filteredGenres = genres.filter(genre =>\n                JSON.stringify(Object.keys(genre)).toLowerCase().includes(keyword)\n            );\n            setFilteredGenres(filteredGenres);\n        } else {\n            setFilteredGenres([])\n        }\n    }, [keyword, genres]);\n\n    useEffect( () => {\n        if (filteredGenres.length > 0) {\n            setFinalGenres(filteredGenres);\n        } else {\n            setFinalGenres(genres);\n        }\n    }, [filteredGenres, genres]);\n\n    return (\n        <header className={\"flex flex-col p-6 md:sticky top-0 h-screen md:w-1/4 w-full\"}>\n            <div>\n                <h1 className={\"text-sm\"}>\n                    <div\n                        onClick={props.handleHome}\n                        className={\"inline-block border-b border-transparent hover:border-white cursor-pointer\"}\n                    >\n                        N²\n                    </div>\n                </h1>\n                <h2 className={\"text-2xl leading-tight max-w-xs my-8\"}>The fastest way to find something to watch on Netflix.</h2>\n            </div>\n            <div className={\"mb-4\"}>\n                {!loading &&\n                    <select\n                        className={\"w-full cursor-pointer border border-gray-900 hover:border-gray-600 py-1 px-2 appearance-none focus:outline-none text-sm text-gray-500 hover:text-white\"}\n                        onChange={props.handleCountryChange}\n                        defaultValue={\"ca\"}\n                        id={\"select_id\"}\n                    >\n                        {countries.map((item) => {\n                            const number_id = Object.values(item)[0];\n                            const id = Object.values(item)[1];\n                            const name = Object.values(item)[2];\n                            return (\n                                <option\n                                    value={id}\n                                    key={number_id}\n                                    data-id={number_id}\n                                >\n                                    {name}\n                                </option>\n                            )\n                        })\n                        }\n                    </select>\n                }\n            </div>\n            <div className={\"relative search-field flex items-center\"}>\n                <input\n                    className={\"w-full bg-black focus:outline-none text-sm py-3\"}\n                    type={\"text\"}\n                    value={keyword}\n                    placeholder={\"Search genres\"}\n                    onChange={e => setKeyword(e.target.value)}\n                />\n            </div>\n            <nav\n                id={\"genres\"}\n                className={\"relative flex-grow overflow-hidden border-b border-t border-gray-800\"}\n            >\n                <div className={\"absolute py-3 top-0 bottom-0 overflow-y-scroll hide-scrollbar\"}>\n                    {!loading &&\n                        finalGenres.map((item) => {\n                            const genreTitle = Object.keys(item)[0];\n                            const genreIds = Object.values(item)[0].join();\n                            return (\n                                <div>\n                                    <label\n                                        key={genreTitle}\n                                        className={\"inline-block text-sm transition text-gray-500 hover:text-white\"}\n                                    >\n                                        <input\n                                            className={\"genre-checkbox\"}\n                                            name={genreTitle}\n                                            type={\"checkbox\"}\n                                            checked={props.isActive}\n                                            onChange={props.handleInputChange}\n                                            value={genreIds}\n                                        />\n                                        <span className={\"label\"}>{genreTitle}</span>\n                                    </label>\n                                </div>\n                            )\n                        }\n                    )}\n                </div>\n            </nav>\n        </header>\n    )\n}\n\nexport default Nav;","import React from 'react';\n\nconst DetailItem = (props) => {\n    return (\n        <div className={\"w-1/3\"}>\n            <span className={\"text-sm text-gray-500\"}>{props.label}</span>\n            <p>{props.item}</p>\n        </div>\n    )\n}\n\nexport default DetailItem;","import React from \"react\";\n\nconst PeopleItem = (props) => {\n    return (\n        <div className={\"people-item flex text-sm border-b border-gray-900 py-4\"}>\n            <span className={\"text-gray-500\"}>{props.label}</span>\n            <div className={\"w-4/6 pl-6 ml-auto\"}>\n                <ul className={\"flex flex-wrap\"}>\n                    {props.children}\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nexport default PeopleItem;","import React, {useState, useEffect} from 'react';\nimport {getTitle} from \"../services/ApiData\";\nimport Loading from \"../components/Loading\";\nimport DetailItem from \"../components/DetailItem\";\nimport {netflixUrl, trailerUrl, rottenUrl, trim, imdbUrl} from \"../services/Utilities\";\nimport Button from \"../components/Button\";\nimport PeopleItem from \"../components/PeopleItem\";\nimport Rotten from '../assets/images/rotten.svg';\nimport IMDb from '../assets/images/imdb.svg';\n\nconst Title = (props) => {\n\n    const [content, setContent] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        getTitle(props.id).then((content) => {\n            try {\n                setContent(content);\n                setLoading(false);\n            } catch {\n\n            }\n        })\n    }, [props.id]);\n\n    return (\n        loading ? (\n            <Loading />\n        ) : (\n            <article>\n                <div className={\"border-b border-gray-800 py-6 flex\"}>\n                    <figure className={\"w-2/6\"}>\n                        <a\n                            className={\"block img-wrapper title-page rounded overflow-hidden\"}\n                            href={netflixUrl(content.nfinfo.netflixid)}\n                            target={\"_blank\"}\n                            rel={\"noopener noreferrer\"}\n                        >\n                            <img\n                                loading={\"lazy\"}\n                                className={\"w-full h-auto\"}\n                                src={content.nfinfo.image1}\n                                alt={content.nfinfo.title}\n                            />\n                        </a>\n                    </figure>\n                    <section className={\"w-4/6 pl-6 flex flex-col\"}>\n                        <div>\n                            <div className={\"flex items-center mb-4\"}>\n                                <h1 className={\"text-2xl font-medium\"}>\n                                    <a\n                                        className={\"inline-block border-b border-transparent hover:border-white\"}\n                                        href={netflixUrl(content.nfinfo.netflixid)}\n                                        target={\"_blank\"}\n                                        rel={\"noopener noreferrer\"}\n                                    >\n                                        {content.nfinfo.title}\n                                    </a>\n                                </h1>\n                                <button\n                                    className={\"ml-auto focus:outline-none text-gray-500 hover:text-white transition\"}\n                                    onClick={props.handleCloseTitle}\n                                >\n                                    <svg className={\"w-8 h-auto\"} width=\"64\" height=\"64\" viewBox=\"0 0 64 64\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M47.4142 47.4354C47.2284 47.6213 47.0077 47.7688 46.7649 47.8694C46.522 47.9701 46.2617 48.0218 45.9989 48.0218C45.736 48.0218 45.4757 47.9701 45.2328 47.8694C44.99 47.7688 44.7693 47.6213 44.5835 47.4354L31.9835 34.8354L19.3951 47.4245C19.019 47.7966 18.511 48.0047 17.982 48.0032C17.453 48.0018 16.946 47.7911 16.5719 47.417C16.1979 47.0429 15.9871 46.5359 15.9857 46.0069C15.9843 45.4779 16.1924 44.9699 16.5645 44.5938L29.1533 32.0051L16.5668 19.4186C16.2004 19.0415 15.9971 18.5353 16.0009 18.0096C16.0047 17.4838 16.2152 16.9806 16.587 16.6088C16.9587 16.2369 17.4619 16.0263 17.9877 16.0225C18.5134 16.0186 19.0196 16.2218 19.3968 16.5881L31.9838 29.1745L44.5813 16.5771C44.7663 16.3872 44.9871 16.236 45.231 16.1321C45.4749 16.0283 45.7369 15.9739 46.002 15.9722C46.2671 15.9705 46.5298 16.0214 46.7751 16.1221C47.0203 16.2227 47.2431 16.3711 47.4305 16.5585C47.6179 16.746 47.7662 16.9688 47.8668 17.2141C47.9674 17.4593 48.0183 17.7221 48.0165 17.9871C48.0147 18.2522 47.9603 18.5143 47.8564 18.7581C47.7525 19.002 47.6012 19.2228 47.4113 19.4077L34.8145 32.0051L47.4145 44.6051C47.6004 44.791 47.7478 45.0116 47.8484 45.2544C47.9489 45.4972 48.0007 45.7575 48.0007 46.0203C48.0006 46.2832 47.9488 46.5434 47.8482 46.7862C47.7476 47.029 47.6001 47.2496 47.4142 47.4354Z\" fill=\"currentColor\"/>\n                                    </svg>\n                                </button>\n                            </div>\n                            <section className={\"flex border-t border-b border-gray-900 py-3 mb-4\"}>\n                                {content.imdbinfo.rating &&\n                                    content.imdbinfo.rating > 0 &&\n                                        <DetailItem label={\"IMDb Rating\"} item={content.imdbinfo.rating}/>\n                                }\n                                {content.imdbinfo.runtime &&\n                                    <DetailItem label={\"Duration\"} item={content.imdbinfo.runtime}/>\n                                }\n                                {content.nfinfo.released &&\n                                    <DetailItem label={\"Year Released\"} item={content.nfinfo.released}/>\n                                }\n                            </section>\n                            <p\n                                dangerouslySetInnerHTML={{__html: trim(content.nfinfo.synopsis)}}\n                            />\n                        </div>\n                        <div className={\"mt-auto flex flex-wrap items-center\"}>\n                            <Button\n                                link={netflixUrl(content.nfinfo.netflixid)}\n                                label={\"Watch \" + content.nfinfo.type}\n                            />\n                            <Button\n                                type={\"secondary\"}\n                                link={trailerUrl(content.nfinfo.title)}\n                                label={\"Watch trailer\"}\n                            />\n                            <div className={\"ml-auto\"}>\n                                <Button\n                                    type={\"secondary\"}\n                                    link={imdbUrl(content.imdbinfo.imdbid)}\n                                >\n                                    <img\n                                        src={IMDb}\n                                        className={\"icon-button\"}\n                                        alt={content.nfinfo.title + \" on IMDb\"}\n                                    />\n                                </Button>\n                                <Button\n                                    type={\"secondary\"}\n                                    link={rottenUrl(content.nfinfo.title)}\n                                >\n                                    <img\n                                        src={Rotten}\n                                        className={\"icon-button\"}\n                                        alt={\"Search for \" + content.nfinfo.title + \" on Rotten Tomatoes\"}\n                                    />\n                                </Button>\n                            </div>\n                        </div>\n                    </section>\n                </div>\n                <section className={\"border-b border-gray-800\"}>\n                    {content.people.map((item) => {\n                        return (\n                            item.director !== undefined &&\n                                item.director.length > 0 &&\n                                    <PeopleItem key={item.director} label={\"Director\"}>\n                                        {item.director.map((item) => {\n                                            return (\n                                                <li key={item} className={\"w-1/2 pr-4\"}>{item}</li>\n                                            )\n                                        })\n                                        }\n                                    </PeopleItem>\n                        )\n                    })\n                    }\n                    {content.people.map((item) => {\n                        return (\n                            item.creator !== undefined &&\n                                item.creator.length > 0 &&\n                                    <PeopleItem key={item.creator} label={\"Creator(s)\"}>\n                                        {item.creator.map((item) => {\n                                            return (\n                                                <li key={item} className={\"w-1/2 pr-4\"}>{item}</li>\n                                            )\n                                        })\n                                        }\n                                    </PeopleItem>\n                        )\n                    })\n                    }\n                    {content.people.map((item) => {\n                        return (\n                            item.actor !== undefined &&\n                                item.actor.length > 0 &&\n                                    <PeopleItem key={item.actor} label={\"Actor(s)\"}>\n                                        {item.actor.map((item) => {\n                                            return (\n                                                <li key={item} className={\"w-1/2 pr-4\"}>{item}</li>\n                                            )\n                                        })\n                                        }\n                                    </PeopleItem>\n                        )\n                    })\n                    }\n                </section>\n                <section className={\"py-6 border-b border-gray-800 mb-6\"}>\n                    {content.imdbinfo.plot &&\n                        <p>{content.imdbinfo.plot.replace(/&amp;#39;/g,\"'\", \"'\")}</p>\n                    }\n                </section>\n            </article>\n        )\n    )\n}\n\nexport default Title;","import React, {useState, useEffect} from 'react';\nimport {getNew, getResults} from '../services/ApiData'\nimport { withRouter } from \"react-router-dom\";\nimport history from '../history';\n\nimport Loading from \"../components/Loading\";\nimport List from \"../components/List\";\nimport PageHeader from \"../components/PageHeader\";\nimport Nav from \"../components/Nav\";\nimport Title from \"./Title\";\nimport RemoveIcon from '../assets/images/remove.svg';\n\nconst Home = (props) => {\n\n    const [newContent, setNewContent] = useState([]);\n    const [activeCountry, setActiveCountry] = useState(\"ca\");\n    const [activeCountryNumber, setActiveCountryNumber] = useState(\"33\");\n    const [loading, setLoading] = useState(true);\n    const [searching, setSearching] = useState(false);\n    const [genres, setGenres] = useState([]);\n    const [activeGenres, setActiveGenres] = useState([]);\n    const [keyword, setKeyword] = useState(\"\");\n    const [isTitle, setIsTitle] = useState(false);\n    const [title, setTitle] = useState(0);\n\n    const getHomeContent = (activeCountry) => {\n        setLoading(true);\n        if (sessionStorage.getItem(\"newContent\" + activeCountry) === null) {\n            getNew(activeCountry).then((content) => {\n                try {\n                    setNewContent(content);\n                    setLoading(false);\n                } catch {\n                    setLoading(false);\n                }\n            });\n        } else {\n            setNewContent(JSON.parse(sessionStorage.getItem(\"newContent\" + activeCountry) || \"[]\"));\n            setLoading(false);\n        }\n    }\n\n    const getSearchResults = (keyword, genres, activeCountry) => {\n        setLoading(true);\n        getResults(keyword, genres, activeCountry).then((content) => {\n            try {\n                setNewContent(content);\n                setLoading(false);\n            } catch {\n                setLoading(false);\n            }\n        });\n    }\n\n\n    /*\n        On enter, if keyword isn't empty, search content.\n    */\n    const handleSearch = (event) => {\n        if (event.key === 'Enter') {\n            setIsTitle(false);\n            setLoading(true);\n            if (keyword === \"\") {\n                setSearching(false);\n                getHomeContent();\n            } else {\n                setSearching(true);\n                getSearchResults(keyword, genres, activeCountryNumber);\n            }\n        }\n    }\n\n\n    /*\n        Navigate user to title page\n    */\n    const handleTitle = (event) => {\n        const titleId = event.target.getAttribute('data-id')\n        setIsTitle(true);\n        setTitle(titleId);\n        history.push('/n2/#/titles/' + titleId, { id: titleId });\n    }\n\n\n    /*\n        On browser back, check if path is title or home page.\n    */\n    window.onpopstate = function () {\n        const path = history.location.pathname;\n        if (path.includes('titles')) {\n            const newTitle = path.replace('/n2/titles/', '');\n            setIsTitle(true);\n            setTitle(Number(newTitle));\n        } else {\n            setIsTitle(false);\n        }\n    };\n\n\n    /*\n        Return user to homepage.\n    */\n    const handleHome = (event) => {\n        setIsTitle(false);\n        history.push('/n2');\n    }\n\n    const handleCloseTitle = () => {\n        history.go(-1);\n    }\n\n    /*\n        If genre is selected, add genre tag, check checkbox, and set active genres.\n    */\n    const handleSelectGenre = (event) => {\n        setIsTitle(false);\n        const target = event.target;\n        const value = target.value;\n        const status = target.checked;\n\n        if (status === true) {\n            setGenres([...genres, value])\n            setActiveGenres([...activeGenres, [target.name, target.value]]);\n        } else {\n            removeGenre(event);\n        }\n\n        let count = document.querySelectorAll(\"#genres :checked\").length;\n\n\n        if (count > 0) {\n            setSearching(true);\n            setLoading(true);\n        } else if (count === 0) {\n            setSearching(false);\n            setLoading(false);\n            getHomeContent(activeCountry);\n        }\n\n    }\n\n\n    /*\n        If genre is unselected, remove genre tag, uncheck checkbox, and reset active genres.\n    */\n    const removeGenre = (event) => {\n        const target = event.target;\n        const value = target.getAttribute(\"data-id\");\n        const otherValue = target.value;\n        const newGenres = genres.filter(genre =>\n            genre !== value\n        );\n        const newActiveGenres = activeGenres.filter(genre =>\n            otherValue ? (\n                genre[1] !== otherValue\n            ) : (\n                genre[1] !== value\n            )\n        );\n\n        const checkbox = document.querySelectorAll(\".genre-checkbox[value=\" + JSON.stringify(value) + \"]\")[0];\n\n        if (checkbox) {\n            checkbox.checked = false;\n        }\n\n        setGenres(newGenres);\n        setActiveGenres(newActiveGenres);\n    }\n\n\n    /*\n        If country changes, set title to false and set active country.\n    */\n    const handleCountryChange = (event) => {\n        setIsTitle(false);\n        const value = event.target.value;\n        const obj = event.target;\n        const number_id = obj.options[obj.selectedIndex].getAttribute('data-id');\n\n        setActiveCountry(value)\n        setActiveCountryNumber(number_id)\n    }\n\n    /*\n        Check window hash and redirect to title page if it contains 'titles'.\n    */\n    useEffect(() => {\n        const path = window.location.hash;\n        if (path.includes('titles')) {\n            const newTitle = path.replace('#/titles/', '');\n            setIsTitle(true);\n            setTitle(Number(newTitle));\n        }\n    }, []);\n\n    /*\n        If selected genres or search keyword active, show results, else show new content.\n    */\n    useEffect(() => {\n        if (genres.length > 0 || keyword !== \"\") {\n            getSearchResults(keyword, genres, activeCountryNumber);\n        } else {\n            getHomeContent(activeCountry);\n        }\n    }, [genres, activeCountry, activeCountryNumber]);\n\n    return (\n        <div className={\"page-container\"}>\n            <Nav\n                handleInputChange={handleSelectGenre}\n                handleCountryChange={handleCountryChange}\n                handleHome={handleHome}\n                defaultCountry={\"33\"}\n            />\n            <div className={\"container\"}>\n                <div>\n                    <PageHeader\n                        home={true}\n                        keyword={keyword}\n                        handleKeyDown={handleSearch}\n                        setKeyword={setKeyword}\n                    />\n                    {isTitle ? (\n                        <Title\n                            id={title}\n                            handleCloseTitle={handleCloseTitle}\n                        />\n                    ) : (\n                        loading ? (\n                            <div>\n                                <Loading/>\n                            </div>\n                        ) : (\n                            searching ? (\n                                <List\n                                    title={newContent.length + ' results'}\n                                    content={newContent}\n                                    handleTitle={handleTitle}\n                                >\n                                    { activeGenres.map((activeGenre, i) => (\n                                        <button\n                                            key={activeGenre[1]}\n                                            data-id={activeGenre[1]}\n                                            className={\"transition flex items-center ml-2 px-1 text-xs rounded inline-block text-center border cursor-pointer border-gray-900 hover:border-gray-600 focus:outline-none text-gray-500 hover:text-white\"}\n                                            onClick={removeGenre}\n                                        >\n                                            <span>{activeGenre[0]}</span>\n                                            <svg className={\"w-3 h-auto ml-1\"} width=\"64\" height=\"64\" viewBox=\"0 0 64 64\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M32 56C27.2533 56 22.6131 54.5924 18.6663 51.9553C14.7195 49.3181 11.6434 45.5698 9.8269 41.1844C8.0104 36.799 7.53512 31.9734 8.46116 27.3178C9.38721 22.6623 11.673 18.3859 15.0294 15.0294C18.3859 11.673 22.6623 9.38721 27.3178 8.46116C31.9734 7.53512 36.799 8.0104 41.1844 9.8269C45.5698 11.6434 49.3181 14.7195 51.9553 18.6663C54.5924 22.6131 56 27.2533 56 32C56 38.3652 53.4714 44.4697 48.9706 48.9706C44.4697 53.4714 38.3652 56 32 56ZM17 32C17 31.4696 17.2107 30.9609 17.5858 30.5858C17.9609 30.2107 18.4696 30 19 30H45C45.5304 30 46.0392 30.2107 46.4142 30.5858C46.7893 30.9609 47 31.4696 47 32C47 32.5304 46.7893 33.0392 46.4142 33.4142C46.0392 33.7893 45.5304 34 45 34H19C18.4696 34 17.9609 33.7893 17.5858 33.4142C17.2107 33.0392 17 32.5304 17 32Z\" fill=\"currentColor\"/>\n                                            </svg>\n                                        </button>\n                                    ))}\n                                </List>\n                            ) : (\n                                <List\n                                    title={newContent.length + \" new titles\"}\n                                    content={newContent}\n                                    handleTitle={handleTitle}\n                                />\n                            )\n                        )\n                        )\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(Home);","import React from 'react';\nimport {HashRouter as Router, Route} from \"react-router-dom\";\nimport './index.css';\nimport Home from './pages/Home'\n\nconst App = () => {\n\n    return (\n        <div>\n            <Router\n                basename={'/'}\n            >\n                <Route\n                    exact\n                    path={'/'}\n                    component={Home}\n                />\n                <Route\n                    exact\n                    path={'/titles/:id'}\n                    component={Home}\n                />\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}